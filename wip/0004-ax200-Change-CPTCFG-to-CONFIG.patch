From 1e7fdb13f45e587341b8dac9bfa155136e49e566 Mon Sep 17 00:00:00 2001
From: Ben Greear <greearb@candelatech.com>
Date: Tue, 15 Dec 2020 08:37:58 -0800
Subject: [PATCH 4/7] ax200:  Change CPTCFG to CONFIG

Using text substitution s/CPTCFG/CONFIG/g

Signed-off-by: Ben Greear <greearb@candelatech.com>
---
 drivers/net/wireless/intel/iwlwifi/Makefile   | 24 ++---
 drivers/net/wireless/intel/iwlwifi/fw/acpi.c  |  2 +-
 drivers/net/wireless/intel/iwlwifi/fw/dbg.c   |  8 +-
 drivers/net/wireless/intel/iwlwifi/fw/dbg.h   |  6 +-
 .../net/wireless/intel/iwlwifi/fw/debugfs.h   |  4 +-
 drivers/net/wireless/intel/iwlwifi/fw/file.h  |  4 +-
 drivers/net/wireless/intel/iwlwifi/fw/pnvm.h  |  2 +-
 .../net/wireless/intel/iwlwifi/fw/runtime.h   |  4 +-
 .../net/wireless/intel/iwlwifi/fw/testmode.h  |  4 +-
 .../net/wireless/intel/iwlwifi/iwl-config.h   | 14 +--
 .../net/wireless/intel/iwlwifi/iwl-dbg-cfg.c  |  6 +-
 .../net/wireless/intel/iwlwifi/iwl-dbg-cfg.h  | 20 ++--
 .../net/wireless/intel/iwlwifi/iwl-debug.c    |  4 +-
 .../net/wireless/intel/iwlwifi/iwl-debug.h    | 12 +--
 .../intel/iwlwifi/iwl-devtrace-iwlwifi.h      |  2 +-
 .../net/wireless/intel/iwlwifi/iwl-devtrace.h |  2 +-
 .../net/wireless/intel/iwlwifi/iwl-dnt-cfg.c  |  8 +-
 .../net/wireless/intel/iwlwifi/iwl-dnt-cfg.h  |  2 +-
 drivers/net/wireless/intel/iwlwifi/iwl-drv.c  | 94 +++++++++----------
 drivers/net/wireless/intel/iwlwifi/iwl-drv.h  |  2 +-
 drivers/net/wireless/intel/iwlwifi/iwl-io.c   |  4 +-
 .../wireless/intel/iwlwifi/iwl-modparams.h    |  4 +-
 .../wireless/intel/iwlwifi/iwl-nvm-parse.c    | 14 +--
 .../net/wireless/intel/iwlwifi/iwl-op-mode.h  |  6 +-
 .../net/wireless/intel/iwlwifi/iwl-phy-db.c   |  4 +-
 .../net/wireless/intel/iwlwifi/iwl-phy-db.h   |  2 +-
 .../net/wireless/intel/iwlwifi/iwl-tm-gnl.c   |  4 +-
 .../net/wireless/intel/iwlwifi/iwl-trans.h    | 18 ++--
 .../wireless/intel/iwlwifi/iwl-vendor-cmd.h   |  2 +-
 .../net/wireless/intel/iwlwifi/mvm/Makefile   |  8 +-
 .../wireless/intel/iwlwifi/mvm/constants.h    |  6 +-
 drivers/net/wireless/intel/iwlwifi/mvm/d3.c   | 10 +-
 .../net/wireless/intel/iwlwifi/mvm/debugfs.c  | 24 ++---
 .../intel/iwlwifi/mvm/ftm-initiator.c         | 16 ++--
 .../intel/iwlwifi/mvm/ftm-responder.c         |  2 +-
 drivers/net/wireless/intel/iwlwifi/mvm/fw.c   | 26 ++---
 .../net/wireless/intel/iwlwifi/mvm/mac-ctxt.c |  6 +-
 .../net/wireless/intel/iwlwifi/mvm/mac80211.c | 56 +++++------
 drivers/net/wireless/intel/iwlwifi/mvm/mvm.h  | 52 +++++-----
 drivers/net/wireless/intel/iwlwifi/mvm/nvm.c  |  2 +-
 drivers/net/wireless/intel/iwlwifi/mvm/ops.c  | 58 ++++++------
 .../net/wireless/intel/iwlwifi/mvm/phy-ctxt.c |  2 +-
 .../net/wireless/intel/iwlwifi/mvm/power.c    | 14 +--
 .../net/wireless/intel/iwlwifi/mvm/quota.c    | 12 +--
 .../net/wireless/intel/iwlwifi/mvm/rs-fw.c    | 14 +--
 drivers/net/wireless/intel/iwlwifi/mvm/rs.c   | 22 ++---
 drivers/net/wireless/intel/iwlwifi/mvm/rs.h   | 14 +--
 drivers/net/wireless/intel/iwlwifi/mvm/rx.c   |  8 +-
 drivers/net/wireless/intel/iwlwifi/mvm/rxmq.c |  4 +-
 drivers/net/wireless/intel/iwlwifi/mvm/scan.c |  8 +-
 drivers/net/wireless/intel/iwlwifi/mvm/tdls.c |  4 +-
 drivers/net/wireless/intel/iwlwifi/mvm/tx.c   | 20 ++--
 .../net/wireless/intel/iwlwifi/mvm/utils.c    | 14 +--
 .../wireless/intel/iwlwifi/mvm/vendor-cmd.c   | 12 +--
 drivers/net/wireless/intel/iwlwifi/pcie/drv.c | 16 ++--
 .../wireless/intel/iwlwifi/pcie/internal.h    | 14 +--
 .../net/wireless/intel/iwlwifi/pcie/trans.c   | 22 ++---
 .../net/wireless/intel/iwlwifi/pcie/tx-gen2.c |  2 +-
 drivers/net/wireless/intel/iwlwifi/pcie/tx.c  |  2 +-
 .../net/wireless/intel/iwlwifi/xvt/Makefile   |  4 +-
 .../wireless/intel/iwlwifi/xvt/constants.h    |  6 +-
 .../net/wireless/intel/iwlwifi/xvt/debugfs.c  |  4 +-
 drivers/net/wireless/intel/iwlwifi/xvt/fw.c   |  4 +-
 .../wireless/intel/iwlwifi/xvt/user-infc.c    |  6 +-
 drivers/net/wireless/intel/iwlwifi/xvt/xvt.h  |  4 +-
 65 files changed, 390 insertions(+), 390 deletions(-)

diff --git a/drivers/net/wireless/intel/iwlwifi/Makefile b/drivers/net/wireless/intel/iwlwifi/Makefile
index 64b28f6e23994..cdd2fac6b5482 100644
--- a/drivers/net/wireless/intel/iwlwifi/Makefile
+++ b/drivers/net/wireless/intel/iwlwifi/Makefile
@@ -1,6 +1,6 @@
 # SPDX-License-Identifier: GPL-2.0
 # common
-obj-$(CPTCFG_IWLWIFI)	+= iwlwifi.o
+obj-$(CONFIG_IWLWIFI)	+= iwlwifi.o
 iwlwifi-objs		+= iwl-io.o
 iwlwifi-objs		+= iwl-drv.o
 iwlwifi-objs		+= iwl-debug.o
@@ -12,9 +12,9 @@ iwlwifi-objs		+= queue/tx.o

 iwlwifi-objs		+= fw/img.o fw/notif-wait.o
 iwlwifi-objs		+= fw/dbg.o fw/pnvm.o
-iwlwifi-$(CPTCFG_IWLMVM)	+= fw/paging.o fw/smem.o fw/init.o
-iwlwifi-$(CPTCFG_IWLXVT)	+= fw/init.o
-iwlwifi-$(CPTCFG_IWLWIFI_DEBUGFS) += fw/debugfs.o
+iwlwifi-$(CONFIG_IWLMVM)	+= fw/paging.o fw/smem.o fw/init.o
+iwlwifi-$(CONFIG_IWLXVT)	+= fw/init.o
+iwlwifi-$(CONFIG_IWLWIFI_DEBUGFS) += fw/debugfs.o

 iwlwifi-$(CONFIG_ACPI)	+= fw/acpi.o

@@ -22,23 +22,23 @@ iwlwifi-$(CONFIG_ACPI)	+= fw/acpi.o
 iwlwifi-$(CONFIG_PCI) += pcie/drv.o pcie/rx.o pcie/tx.o pcie/trans.o
 iwlwifi-$(CONFIG_PCI) += pcie/ctxt-info.o pcie/ctxt-info-gen3.o pcie/trans-gen2.o pcie/tx-gen2.o

-iwlwifi-$(CPTCFG_IWLMVM) += cfg/7000.o cfg/8000.o
-iwlwifi-$(CPTCFG_IWLMVM) += cfg/9000.o cfg/22000.o
+iwlwifi-$(CONFIG_IWLMVM) += cfg/7000.o cfg/8000.o
+iwlwifi-$(CONFIG_IWLMVM) += cfg/9000.o cfg/22000.o

-iwlwifi-$(CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES) += iwl-dbg-cfg.o
+iwlwifi-$(CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES) += iwl-dbg-cfg.o


 iwlwifi-objs += $(iwlwifi-m)
 iwlwifi-objs += $(iwlwifi-y)

-iwlwifi-$(CPTCFG_IWLWIFI_DEVICE_TRACING) += iwl-devtrace.o
-iwlwifi-$(CPTCFG_IWLWIFI_DEVICE_TESTMODE) += iwl-tm-gnl.o iwl-dnt-cfg.o iwl-dnt-dispatch.o
-iwlwifi-$(CPTCFG_IWLWIFI_DEVICE_TESTMODE) += iwl-dnt-dev-if.o fw/testmode.o
+iwlwifi-$(CONFIG_IWLWIFI_DEVICE_TRACING) += iwl-devtrace.o
+iwlwifi-$(CONFIG_IWLWIFI_DEVICE_TESTMODE) += iwl-tm-gnl.o iwl-dnt-cfg.o iwl-dnt-dispatch.o
+iwlwifi-$(CONFIG_IWLWIFI_DEVICE_TESTMODE) += iwl-dnt-dev-if.o fw/testmode.o

 ccflags-y += -I$(src)
 subdir-ccflags-y += $(call cc-option,-Wimplicit-fallthrough)

-obj-$(CPTCFG_IWLMVM)	+= mvm/
-obj-$(CPTCFG_IWLXVT)	+= xvt/
+obj-$(CONFIG_IWLMVM)	+= mvm/
+obj-$(CONFIG_IWLXVT)	+= xvt/

 CFLAGS_iwl-devtrace.o := -I$(src)
diff --git a/drivers/net/wireless/intel/iwlwifi/fw/acpi.c b/drivers/net/wireless/intel/iwlwifi/fw/acpi.c
index 15b5c40b35ea6..5619aaeee9504 100644
--- a/drivers/net/wireless/intel/iwlwifi/fw/acpi.c
+++ b/drivers/net/wireless/intel/iwlwifi/fw/acpi.c
@@ -482,7 +482,7 @@ int iwl_sar_select_profile(struct iwl_fw_runtime *fwrt,
			break;
	}

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	fwrt->sar_chain_a_profile = prof_a;
	fwrt->sar_chain_b_profile = prof_b;
 #endif
diff --git a/drivers/net/wireless/intel/iwlwifi/fw/dbg.c b/drivers/net/wireless/intel/iwlwifi/fw/dbg.c
index a8f81dd0c3c23..1e408ce29cc52 100644
--- a/drivers/net/wireless/intel/iwlwifi/fw/dbg.c
+++ b/drivers/net/wireless/intel/iwlwifi/fw/dbg.c
@@ -2683,8 +2683,8 @@ int iwl_fw_start_dbg_conf(struct iwl_fw_runtime *fwrt, u8 conf_id)
		IWL_INFO(fwrt, "FW already configured (%d) - re-configuring\n",
			 fwrt->dump.conf);

-#if IS_ENABLED(CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES) && \
-	(IS_ENABLED(CPTCFG_IWLMVM) || IS_ENABLED(CPTCFG_IWLFMAC))
+#if IS_ENABLED(CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES) && \
+	(IS_ENABLED(CONFIG_IWLMVM) || IS_ENABLED(CONFIG_IWLFMAC))
	/* start default config marker cmd for syncing logs */
	if (fwrt->trans->dbg_cfg.enable_timestamp_marker_cmd)
		iwl_fw_trigger_timestamp(fwrt, 1);
@@ -2735,7 +2735,7 @@ static void iwl_fw_dbg_collect_sync(struct iwl_fw_runtime *fwrt, u8 wk_idx)
		IWL_ERR(fwrt, "Skip fw error dump since bus is dead\n");
		goto out;
	}
-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (fwrt->trans->dbg_cfg.disable_wrt_dump) {
		IWL_DEBUG_FW_INFO(fwrt, "WRT: Data collection disabled\n");
		goto out;
@@ -2930,7 +2930,7 @@ void iwl_fw_dbg_stop_restart_recording(struct iwl_fw_runtime *fwrt,
		iwl_fw_dbg_stop_recording(fwrt->trans, params);
	else
		ret = iwl_fw_dbg_restart_recording(fwrt->trans, params);
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	if (!ret) {
		if (stop)
			fwrt->trans->dbg.rec_on = false;
diff --git a/drivers/net/wireless/intel/iwlwifi/fw/dbg.h b/drivers/net/wireless/intel/iwlwifi/fw/dbg.h
index cbcaf83eec14f..ef98372f02b45 100644
--- a/drivers/net/wireless/intel/iwlwifi/fw/dbg.h
+++ b/drivers/net/wireless/intel/iwlwifi/fw/dbg.h
@@ -232,7 +232,7 @@ void iwl_fw_dbg_stop_restart_recording(struct iwl_fw_runtime *fwrt,
				       struct iwl_fw_dbg_params *params,
				       bool stop);

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 static inline void iwl_fw_set_dbg_rec_on(struct iwl_fw_runtime *fwrt)
 {
	if (fwrt->cur_fw_img == IWL_UCODE_REGULAR &&
@@ -284,7 +284,7 @@ static inline void iwl_fw_flush_dumps(struct iwl_fw_runtime *fwrt)
		flush_delayed_work(&fwrt->dump.wks[i].wk);
 }

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 static inline void iwl_fw_cancel_timestamp(struct iwl_fw_runtime *fwrt)
 {
	fwrt->timestamp.delay = 0;
@@ -318,7 +318,7 @@ static inline void iwl_fw_suspend_timestamp(struct iwl_fw_runtime *fwrt) {}

 static inline void iwl_fw_resume_timestamp(struct iwl_fw_runtime *fwrt) {}

-#endif /* CPTCFG_IWLWIFI_DEBUGFS */
+#endif /* CONFIG_IWLWIFI_DEBUGFS */

 static inline void iwl_fw_lmac1_set_alive_err_table(struct iwl_trans *trans,
						    u32 lmac_error_event_table)
diff --git a/drivers/net/wireless/intel/iwlwifi/fw/debugfs.h b/drivers/net/wireless/intel/iwlwifi/fw/debugfs.h
index 8b66a342f3b90..fde40ff88451c 100644
--- a/drivers/net/wireless/intel/iwlwifi/fw/debugfs.h
+++ b/drivers/net/wireless/intel/iwlwifi/fw/debugfs.h
@@ -62,7 +62,7 @@

 #include "runtime.h"

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 void iwl_fwrt_dbgfs_register(struct iwl_fw_runtime *fwrt,
			    struct dentry *dbgfs_dir);

@@ -70,4 +70,4 @@ void iwl_fwrt_dbgfs_register(struct iwl_fw_runtime *fwrt,
 static inline void iwl_fwrt_dbgfs_register(struct iwl_fw_runtime *fwrt,
					   struct dentry *dbgfs_dir) { }

-#endif /* CPTCFG_IWLWIFI_DEBUGFS */
+#endif /* CONFIG_IWLWIFI_DEBUGFS */
diff --git a/drivers/net/wireless/intel/iwlwifi/fw/file.h b/drivers/net/wireless/intel/iwlwifi/fw/file.h
index 939b269013c13..c051d46bfb76d 100644
--- a/drivers/net/wireless/intel/iwlwifi/fw/file.h
+++ b/drivers/net/wireless/intel/iwlwifi/fw/file.h
@@ -414,13 +414,13 @@ typedef unsigned int __bitwise iwl_ucode_tlv_capa_t;
  * @IWL_UCODE_TLV_CAPA_LQM_SUPPORT: supports Link Quality Measurement
  * @IWL_UCODE_TLV_CAPA_LMAC_UPLOAD: supports upload mode in lmac (1=supported,
  *	0=no support)
-#ifdef CPTCFG_IWLMVM_AX_SOFTAP_TESTMODE
+#ifdef CONFIG_IWLMVM_AX_SOFTAP_TESTMODE
  * @IWL_UCODE_TLV_CAPA_AX_SAP_TM_V2: support 11ax softap testmode APIs version 2
 #endif
  * @IWL_UCODE_TLV_CAPA_TX_POWER_ACK: reduced TX power API has larger
  *	command size (command version 4) that supports toggling ACK TX
  *	power reduction.
-#ifdef CPTCFG_IWLMVM_AX_SOFTAP_TESTMODE
+#ifdef CONFIG_IWLMVM_AX_SOFTAP_TESTMODE
  * @IWL_UCODE_TLV_CAPA_AX_SAP_TM: support 11ax softap testmode APIs
 #endif
  * @IWL_UCODE_TLV_CAPA_D3_DEBUG: supports debug recording during D3
diff --git a/drivers/net/wireless/intel/iwlwifi/fw/pnvm.h b/drivers/net/wireless/intel/iwlwifi/fw/pnvm.h
index 9e4820a9b7432..f3f5d1d551167 100644
--- a/drivers/net/wireless/intel/iwlwifi/fw/pnvm.h
+++ b/drivers/net/wireless/intel/iwlwifi/fw/pnvm.h
@@ -10,7 +10,7 @@

 #include "fw/notif-wait.h"

-#define MVM_UCODE_PNVM_TIMEOUT	(HZ / 10 * CPTCFG_IWL_TIMEOUT_FACTOR)
+#define MVM_UCODE_PNVM_TIMEOUT	(HZ / 10 * CONFIG_IWL_TIMEOUT_FACTOR)

 int iwl_pnvm_load(struct iwl_trans *trans,
		  struct iwl_notif_wait_data *notif_wait);
diff --git a/drivers/net/wireless/intel/iwlwifi/fw/runtime.h b/drivers/net/wireless/intel/iwlwifi/fw/runtime.h
index f8843b6bd2af4..79ab8ef78f67a 100644
--- a/drivers/net/wireless/intel/iwlwifi/fw/runtime.h
+++ b/drivers/net/wireless/intel/iwlwifi/fw/runtime.h
@@ -192,14 +192,14 @@ struct iwl_fw_runtime {
			u32 umac_minor;
		} fw_ver;
	} dump;
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	struct {
		struct delayed_work wk;
		u32 delay;
		u64 seq;
	} timestamp;
	bool tpc_enabled;
-#endif /* CPTCFG_IWLWIFI_DEBUGFS */
+#endif /* CONFIG_IWLWIFI_DEBUGFS */
 #ifdef CONFIG_ACPI
	struct iwl_sar_profile sar_profiles[ACPI_SAR_PROFILE_NUM];
	u8 sar_chain_a_profile;
diff --git a/drivers/net/wireless/intel/iwlwifi/fw/testmode.h b/drivers/net/wireless/intel/iwlwifi/fw/testmode.h
index 741e79b99995c..8338416328954 100644
--- a/drivers/net/wireless/intel/iwlwifi/fw/testmode.h
+++ b/drivers/net/wireless/intel/iwlwifi/fw/testmode.h
@@ -63,7 +63,7 @@
 #ifndef __IWL_TESTMODE_H__
 #define __IWL_TESTMODE_H__

-#ifdef CPTCFG_NL80211_TESTMODE
+#ifdef CONFIG_NL80211_TESTMODE
 /**
  * enum iwl_testmode_attrs - testmode attributes inside
  *	NL80211_ATTR_TESTDATA
@@ -96,7 +96,7 @@ enum iwl_testmode_commands {
 };
 #endif

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
 struct iwl_host_cmd;
 struct iwl_rx_cmd_buffer;

diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-config.h b/drivers/net/wireless/intel/iwlwifi/iwl-config.h
index fca3a1b72c482..a542d0c0a2e6c 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-config.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-config.h
@@ -130,9 +130,9 @@ enum iwl_nvm_type {

 /* TX queue watchdog timeouts in mSecs */
 #define IWL_WATCHDOG_DISABLED	0
-#define IWL_DEF_WD_TIMEOUT	(2500 * CPTCFG_IWL_TIMEOUT_FACTOR)
-#define IWL_LONG_WD_TIMEOUT	(10000 * CPTCFG_IWL_TIMEOUT_FACTOR)
-#define IWL_MAX_WD_TIMEOUT	(120000 * CPTCFG_IWL_TIMEOUT_FACTOR)
+#define IWL_DEF_WD_TIMEOUT	(2500 * CONFIG_IWL_TIMEOUT_FACTOR)
+#define IWL_LONG_WD_TIMEOUT	(10000 * CONFIG_IWL_TIMEOUT_FACTOR)
+#define IWL_MAX_WD_TIMEOUT	(120000 * CONFIG_IWL_TIMEOUT_FACTOR)

 #define IWL_DEFAULT_MAX_TX_POWER 22
 #define IWL_TX_CSUM_NETIF_FLAGS (NETIF_F_IPV6_CSUM | NETIF_F_IP_CSUM |\
@@ -553,7 +553,7 @@ extern const char iwl_ax201_killer_1650i_name[];
 extern const char iwl_ma_name[];
 extern const char iwl_ax211_name[];
 extern const char iwl_ax411_name[];
-#if IS_ENABLED(CPTCFG_IWLMVM)
+#if IS_ENABLED(CONFIG_IWLMVM)
 extern const struct iwl_cfg iwl7260_2ac_cfg;
 extern const struct iwl_cfg iwl7260_2ac_cfg_high_temp;
 extern const struct iwl_cfg iwl7260_2n_cfg;
@@ -574,8 +574,8 @@ extern const struct iwl_cfg iwl8260_2ac_cfg;
 extern const struct iwl_cfg iwl8265_2ac_cfg;
 extern const struct iwl_cfg iwl8275_2ac_cfg;
 extern const struct iwl_cfg iwl4165_2ac_cfg;
-#endif /* IS_ENABLED(CPTCFG_IWLMVM) */
-#if IS_ENABLED(CPTCFG_IWLMVM) || IS_ENABLED(CPTCFG_IWLFMAC)
+#endif /* IS_ENABLED(CONFIG_IWLMVM) */
+#if IS_ENABLED(CONFIG_IWLMVM) || IS_ENABLED(CONFIG_IWLFMAC)
 extern const struct iwl_cfg iwl9260_2ac_cfg;
 extern const struct iwl_cfg iwl9560_qu_b0_jf_b0_cfg;
 extern const struct iwl_cfg iwl9560_qu_c0_jf_b0_cfg;
@@ -611,6 +611,6 @@ extern const struct iwl_cfg iwlax211_cfg_snj_gf_a0;
 extern const struct iwl_cfg iwlax201_cfg_snj_hr_b0;
 extern const struct iwl_cfg iwl_cfg_ma_a0_gf_a0;
 extern const struct iwl_cfg iwl_cfg_ma_a0_mr_a0;
-#endif /* CPTCFG_IWLMVM || CPTCFG_IWLFMAC */
+#endif /* CONFIG_IWLMVM || CONFIG_IWLFMAC */

 #endif /* __IWL_CONFIG_H__ */
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-dbg-cfg.c b/drivers/net/wireless/intel/iwlwifi/iwl-dbg-cfg.c
index 379bc83bdd896..59c8d5e156d17 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-dbg-cfg.c
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-dbg-cfg.c
@@ -67,12 +67,12 @@
 #include "iwl-modparams.h"

 /* grab default values */
-#undef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#undef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
 #include "fw/runtime.h"
-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
 #include "xvt/constants.h"
 #endif
-#if IS_ENABLED(CPTCFG_IWLMVM)
+#if IS_ENABLED(CONFIG_IWLMVM)
 #include "mvm/constants.h"
 #endif

diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-dbg-cfg.h b/drivers/net/wireless/intel/iwlwifi/iwl-dbg-cfg.h
index 683746073af07..82a744156596e 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-dbg-cfg.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-dbg-cfg.h
@@ -92,7 +92,7 @@ struct iwl_dbg_cfg {
 #define IWL_DBG_CFG_FN(name, fn)	/* nothing */

 #endif /* DBG_CFG_REINCLUDE */
-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
	IWL_DBG_CFG(u32, XVT_DEFAULT_DBGM_MEM_POWER)
	IWL_DBG_CFG(u32, XVT_DEFAULT_DBGM_LMAC_MASK)
	IWL_DBG_CFG(u32, XVT_DEFAULT_DBGM_PRPH_MASK)
@@ -101,7 +101,7 @@ struct iwl_dbg_cfg {
	IWL_DBG_CFG_NODEF(bool, disable_wrt_dump)
	IWL_DBG_CFG_NODEF(bool, disable_52GHz)
	IWL_DBG_CFG_NODEF(bool, disable_24GHz)
-#if IS_ENABLED(CPTCFG_IWLMVM) || IS_ENABLED(CPTCFG_IWLFMAC)
+#if IS_ENABLED(CONFIG_IWLMVM) || IS_ENABLED(CONFIG_IWLFMAC)
	IWL_DBG_CFG_NODEF(u32, MVM_CALIB_OVERRIDE_CONTROL)
	IWL_DBG_CFG_NODEF(u32, MVM_CALIB_INIT_FLOW)
	IWL_DBG_CFG_NODEF(u32, MVM_CALIB_INIT_EVENT)
@@ -112,7 +112,7 @@ struct iwl_dbg_cfg {
	IWL_DBG_CFG_NODEF(bool, enable_timestamp_marker_cmd)
 #endif
	IWL_DBG_CFG_NODEF(bool, STARTUP_RFKILL)
-#if IS_ENABLED(CPTCFG_IWLMVM)
+#if IS_ENABLED(CONFIG_IWLMVM)
	IWL_DBG_CFG(u32, MVM_DEFAULT_PS_TX_DATA_TIMEOUT)
	IWL_DBG_CFG(u32, MVM_DEFAULT_PS_RX_DATA_TIMEOUT)
	IWL_DBG_CFG(u32, MVM_WOWLAN_PS_TX_DATA_TIMEOUT)
@@ -216,8 +216,8 @@ struct iwl_dbg_cfg {
	IWL_DBG_CFG_RANGE(u32, MVM_FTM_INITIATOR_SMOOTH_OVERSHOOT, 0, 667200)
	IWL_DBG_CFG(u32, MVM_FTM_INITIATOR_SMOOTH_AGE_SEC)
	IWL_DBG_CFG(bool, MVM_DISABLE_AP_FILS)
-#endif /* CPTCFG_IWLMVM */
-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#endif /* CONFIG_IWLMVM */
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	IWL_DBG_CFG_NODEF(u32, dnt_out_mode)
	/* XXX: should be dbgm_ or dbg_mon_ for consistency? */
	IWL_DBG_CFG_NODEF(u32, dbm_destination_path)
@@ -267,7 +267,7 @@ struct iwl_dbg_cfg {
	IWL_DBG_CFG_NODEF(u32, dbg_mon_buff_base_addr_reg_addr_b_step)
	IWL_DBG_CFG_NODEF(u32, dbg_mon_buff_end_addr_reg_addr_b_step)
	IWL_DBG_CFG_NODEF(u32, dbg_mon_wr_ptr_addr_b_step)
-#endif /* CPTCFG_IWLWIFI_DEVICE_TESTMODE */
+#endif /* CONFIG_IWLWIFI_DEVICE_TESTMODE */
	IWL_DBG_CFG_BIN(hw_address)
	IWL_DBG_CFG_STR(fw_dbg_conf)
	IWL_DBG_CFG_STR(nvm_file)
@@ -302,12 +302,12 @@ struct iwl_dbg_cfg {
	IWL_DBG_CFG_BIN(he_phy_cap)
	IWL_DBG_CFG_NODEF(u32, FW_DBG_DOMAIN)
	IWL_DBG_CFG_FN(FW_DBG_PRESET, iwl_dbg_cfg_parse_fw_dbg_preset)
-#ifdef CPTCFG_IWLWIFI_DEBUG
+#ifdef CONFIG_IWLWIFI_DEBUG
	IWL_MOD_PARAM(u32, debug_level)
-#endif /* CPTCFG_IWLWIFI_DEBUG */
-#ifdef CPTCFG_IWLWIFI_DISALLOW_OLDER_FW
+#endif /* CONFIG_IWLWIFI_DEBUG */
+#ifdef CONFIG_IWLWIFI_DISALLOW_OLDER_FW
	IWL_DBG_CFG_NODEF(bool, load_old_fw)
-#endif /* CPTCFG_IWLWIFI_DISALLOW_OLDER_FW */
+#endif /* CONFIG_IWLWIFI_DISALLOW_OLDER_FW */
 #undef IWL_DBG_CFG
 #undef IWL_DBG_CFG_STR
 #undef IWL_DBG_CFG_NODEF
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-debug.c b/drivers/net/wireless/intel/iwlwifi/iwl-debug.c
index 5c095e9556a96..ad055d7b9594e 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-debug.c
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-debug.c
@@ -114,7 +114,7 @@ void __iwl_err(struct device *dev, bool rfkill_prefix, bool trace_only,
 }
 IWL_EXPORT_SYMBOL(__iwl_err);

-#if defined(CPTCFG_IWLWIFI_DEBUG) || defined(CPTCFG_IWLWIFI_DEVICE_TRACING)
+#if defined(CONFIG_IWLWIFI_DEBUG) || defined(CONFIG_IWLWIFI_DEVICE_TRACING)
 void __iwl_dbg(struct device *dev,
	       u32 level, bool limit, const char *function,
	       const char *fmt, ...)
@@ -125,7 +125,7 @@ void __iwl_dbg(struct device *dev,
	va_list args;

	va_start(args, fmt);
-#ifdef CPTCFG_IWLWIFI_DEBUG
+#ifdef CONFIG_IWLWIFI_DEBUG
	if (iwl_have_debug_level(level) &&
	    (!limit || net_ratelimit())) {
		va_list args2;
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-debug.h b/drivers/net/wireless/intel/iwlwifi/iwl-debug.h
index 9aebed2eb3939..93c13cc5adf5f 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-debug.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-debug.h
@@ -20,7 +20,7 @@

 static inline bool iwl_have_debug_level(u32 level)
 {
-#ifdef CPTCFG_IWLWIFI_DEBUG
+#ifdef CONFIG_IWLWIFI_DEBUG
	return iwlwifi_mod_params.debug_level & level;
 #else
	return false;
@@ -66,7 +66,7 @@ void __iwl_crit(struct device *dev, const char *fmt, ...) __printf(2, 3);
		__iwl_crit((m)->dev, f, ## a);				\
	} while (0)

-#if defined(CPTCFG_IWLWIFI_DEBUG) || defined(CPTCFG_IWLWIFI_DEVICE_TRACING)
+#if defined(CONFIG_IWLWIFI_DEBUG) || defined(CONFIG_IWLWIFI_DEVICE_TRACING)
 void __iwl_dbg(struct device *dev,
	       u32 level, bool limit, const char *function,
	       const char *fmt, ...) __printf(5, 6);
@@ -96,7 +96,7 @@ do {									\
 #define IWL_DEBUG_LIMIT(m, level, fmt, args...)				\
	__IWL_DEBUG_DEV((m)->dev, level, true, fmt, ##args)

-#ifdef CPTCFG_IWLWIFI_DEBUG
+#ifdef CONFIG_IWLWIFI_DEBUG
 #define iwl_print_hex_dump(m, level, p, len)				\
 do {                                            			\
	if (iwl_have_debug_level(level))				\
@@ -105,7 +105,7 @@ do {                                            			\
 } while (0)
 #else
 #define iwl_print_hex_dump(m, level, p, len)
-#endif				/* CPTCFG_IWLWIFI_DEBUG */
+#endif				/* CONFIG_IWLWIFI_DEBUG */

 /*
  * To use the debug system:
@@ -124,10 +124,10 @@ do {                                            			\
  * The active debug levels can be accessed via files
  *
  *	/sys/module/iwlwifi/parameters/debug
- * when CPTCFG_IWLWIFI_DEBUG=y.
+ * when CONFIG_IWLWIFI_DEBUG=y.
  *
  *	/sys/kernel/debug/phy0/iwlwifi/debug/debug_level
- * when CPTCFG_IWLWIFI_DEBUGFS=y.
+ * when CONFIG_IWLWIFI_DEBUGFS=y.
  *
  */

diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-devtrace-iwlwifi.h b/drivers/net/wireless/intel/iwlwifi/iwl-devtrace-iwlwifi.h
index 117a337bfaa29..3121cea4597d5 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-devtrace-iwlwifi.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-devtrace-iwlwifi.h
@@ -137,7 +137,7 @@ TRACE_EVENT(iwlwifi_dev_ucode_event,
		  __get_str(dev), __entry->time, __entry->data, __entry->ev)
 );

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	TRACE_EVENT(iwlwifi_dev_dnt_data,
	TP_PROTO(const struct device *dev,
		 void *dnt_data, size_t len),
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-devtrace.h b/drivers/net/wireless/intel/iwlwifi/iwl-devtrace.h
index 556c6f9504f36..fc8bc212ee847 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-devtrace.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-devtrace.h
@@ -77,7 +77,7 @@ static inline size_t iwl_rx_trace_len(const struct iwl_trans *trans,
 #include <linux/device.h>


-#if !defined(CPTCFG_IWLWIFI_DEVICE_TRACING) || defined(__CHECKER__)
+#if !defined(CONFIG_IWLWIFI_DEVICE_TRACING) || defined(__CHECKER__)
 #undef TRACE_EVENT
 #define TRACE_EVENT(name, proto, ...) \
 static inline void trace_ ## name(proto) {}
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-dnt-cfg.c b/drivers/net/wireless/intel/iwlwifi/iwl-dnt-cfg.c
index 9923fa198a1b6..009c68a35a7a5 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-dnt-cfg.c
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-dnt-cfg.c
@@ -74,7 +74,7 @@
 #include "iwl-dnt-dispatch.h"
 #include "iwl-dnt-dev-if.h"

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS

 /*
  * iwl_dnt_debugfs_log_read - returns ucodeMessages to the user.
@@ -257,7 +257,7 @@ void iwl_dnt_start(struct iwl_trans *trans)
 }
 IWL_EXPORT_SYMBOL(iwl_dnt_start);

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 static int iwl_dnt_conf_ucode_msgs_via_rx(struct iwl_trans *trans, u32 output)
 {
	struct iwl_dnt *dnt = trans->tmdev->dnt;
@@ -297,7 +297,7 @@ void iwl_dnt_init(struct iwl_trans *trans, struct dentry *dbgfs_dir)

	dnt->dev = trans->dev;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	ret = iwl_dnt_register_debugfs_entries(trans, dbgfs_dir);
	if (!ret) {
		IWL_ERR(trans, "Failed to create dnt debugfs entries\n");
@@ -328,7 +328,7 @@ void iwl_dnt_free(struct iwl_trans *trans)
	if (!dnt)
		return;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	debugfs_remove_recursive(dnt->debugfs_entry);
	if (dnt->debugfs_counter) {
		IWL_INFO(trans, "waiting for dnt debugfs release (cnt=%d)\n",
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-dnt-cfg.h b/drivers/net/wireless/intel/iwlwifi/iwl-dnt-cfg.h
index 3aeed35aba44c..e9f2fd955e8cf 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-dnt-cfg.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-dnt-cfg.h
@@ -250,7 +250,7 @@ struct iwl_dnt {
	u32 cur_mon_mode;

	struct iwl_dnt_dispatch dispatch;
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	u8 debugfs_counter;
	wait_queue_head_t debugfs_waitq;
	struct dentry *debugfs_entry;
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-drv.c b/drivers/net/wireless/intel/iwlwifi/iwl-drv.c
index f789e45ca3523..e24196bc18e76 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-drv.c
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-drv.c
@@ -77,10 +77,10 @@
 #include "iwl-modparams.h"
 #include "fw/api/alive.h"
 #include "fw/api/mac.h"
-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
 #include "iwl-dbg-cfg.h"
 #endif
-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
 #include "iwl-tm-gnl.h"
 #endif

@@ -95,7 +95,7 @@ MODULE_DESCRIPTION(DRV_DESCRIPTION);
 MODULE_AUTHOR(DRV_AUTHOR);
 MODULE_LICENSE("GPL");

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 static struct dentry *iwl_dbgfs_root;
 #endif

@@ -117,7 +117,7 @@ struct iwl_drv {
	struct iwl_op_mode *op_mode;
	struct iwl_trans *trans;
	struct device *dev;
-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
	bool xvt_mode_on;
 #endif

@@ -126,7 +126,7 @@ struct iwl_drv {

	struct completion request_firmware_complete;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	struct dentry *dbgfs_drv;
	struct dentry *dbgfs_trans;
	struct dentry *dbgfs_op_mode;
@@ -136,7 +136,7 @@ struct iwl_drv {
 enum {
	DVM_OP_MODE,
	MVM_OP_MODE,
-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
	XVT_OP_MODE,
 #endif
 };
@@ -150,12 +150,12 @@ static struct iwlwifi_opmode_table {
 } iwlwifi_opmode_table[] = {		/* ops set when driver is initialized */
	[DVM_OP_MODE] = { .name = "iwldvm", .ops = NULL },
	[MVM_OP_MODE] = { .name = "iwlmvm", .ops = NULL },
-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
	[XVT_OP_MODE] = { .name = "iwlxvt", .ops = NULL },
 #endif
 };

-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
 /* kernel object for a device dedicated
  * folder in the sysfs */
 static struct kobject *iwl_kobj;
@@ -348,7 +348,7 @@ static void iwl_remove_sysfs_file(struct iwl_drv *drv)
	sysfs_remove_link(iwl_kobj, dev_name(drv->dev));
	device_remove_file(drv->dev, &dev_attr_op_mode);
 }
-#endif /* CPTCFG_IWLXVT */
+#endif /* CONFIG_IWLXVT */

 #define IWL_DEFAULT_SCAN_CHANNELS 40

@@ -423,7 +423,7 @@ static int iwl_request_firmware(struct iwl_drv *drv, bool first)
 {
	const struct iwl_cfg *cfg = drv->trans->cfg;
	char tag[8];
-#if defined(CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES)
+#if defined(CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES)
	char fw_name_temp[64];
 #endif

@@ -444,13 +444,13 @@ static int iwl_request_firmware(struct iwl_drv *drv, bool first)
		sprintf(tag, "%d", drv->fw_index);
	}

-#ifdef CPTCFG_IWLWIFI_DISALLOW_OLDER_FW
+#ifdef CONFIG_IWLWIFI_DISALLOW_OLDER_FW
	/* The dbg-cfg check here works because the first time we get
	 * here we always load the 'api_max' version, and once that
	 * has returned we load the dbg-cfg file.
	 */
	if ((drv->fw_index != cfg->ucode_api_max
-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	     && !drv->trans->dbg_cfg.load_old_fw
 #endif
	    ) ||
@@ -478,14 +478,14 @@ static int iwl_request_firmware(struct iwl_drv *drv, bool first)
	snprintf(drv->firmware_name, sizeof(drv->firmware_name), "%s%s.ucode",
		 cfg->fw_name_pre, tag);

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (drv->trans->dbg_cfg.fw_file_pre) {
		snprintf(fw_name_temp, sizeof(fw_name_temp), "%s%s",
			 drv->trans->dbg_cfg.fw_file_pre, drv->firmware_name);
		strncpy(drv->firmware_name, fw_name_temp,
			sizeof(drv->firmware_name));
	}
-#endif /* CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES */
+#endif /* CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES */

	IWL_DEBUG_FW_INFO(drv, "attempting to load firmware '%s'\n",
			  drv->firmware_name);
@@ -857,7 +857,7 @@ static int iwl_parse_tlv_firmware(struct iwl_drv *drv,
	int num_of_cpus;
	bool usniffer_req = false;

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (ucode->magic == cpu_to_le32(IWL_TLV_FW_DBG_MAGIC)) {
		size_t dbg_data_ofs = offsetof(struct iwl_tlv_ucode_header,
					       human_readable);
@@ -902,7 +902,7 @@ static int iwl_parse_tlv_firmware(struct iwl_drv *drv,

	len -= sizeof(*ucode);

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
 fw_dbg_conf:
 #endif

@@ -1089,7 +1089,7 @@ static int iwl_parse_tlv_firmware(struct iwl_drv *drv,
			if (tlv_len != sizeof(u32))
				goto invalid_tlv_len;
			drv->fw.phy_config = le32_to_cpup((__le32 *)tlv_data);
-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
			if (drv->trans->dbg_cfg.valid_ants & ~ANT_ABC)
				IWL_ERR(drv,
					"Invalid value for antennas: 0x%x\n",
@@ -1201,8 +1201,8 @@ static int iwl_parse_tlv_firmware(struct iwl_drv *drv,
				break;
			}

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
			if (drv->trans->dbg_cfg.dbm_destination_path) {
				IWL_ERR(drv,
					"Ignoring destination, ini file present\n");
@@ -1582,7 +1582,7 @@ _iwl_op_mode_start(struct iwl_drv *drv, struct iwlwifi_opmode_table *op)
	struct dentry *dbgfs_dir = NULL;
	struct iwl_op_mode *op_mode = NULL;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	drv->dbgfs_op_mode = debugfs_create_dir(op->name,
						drv->dbgfs_drv);
	dbgfs_dir = drv->dbgfs_op_mode;
@@ -1591,7 +1591,7 @@ _iwl_op_mode_start(struct iwl_drv *drv, struct iwlwifi_opmode_table *op)
	op_mode = ops->start(drv->trans, drv->trans->cfg, &drv->fw, dbgfs_dir);

	if (!op_mode) {
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
		debugfs_remove_recursive(drv->dbgfs_op_mode);
		drv->dbgfs_op_mode = NULL;
		return NULL;
@@ -1608,7 +1608,7 @@ static void _iwl_op_mode_stop(struct iwl_drv *drv)
		iwl_op_mode_stop(drv->op_mode);
		drv->op_mode = NULL;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
		debugfs_remove_recursive(drv->dbgfs_op_mode);
		drv->dbgfs_op_mode = NULL;
 #endif
@@ -1637,7 +1637,7 @@ static void iwl_req_fw_callback(const struct firmware *ucode_raw, void *context)
	bool load_module = false;
	bool usniffer_images = false;

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	const struct firmware *fw_dbg_config;
	int load_fw_dbg_err = -ENOENT;
 #endif
@@ -1678,7 +1678,7 @@ static void iwl_req_fw_callback(const struct firmware *ucode_raw, void *context)
	if (err)
		goto try_again;

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (!ucode->ver && drv->trans->dbg_cfg.fw_dbg_conf) {
		load_fw_dbg_err =
			request_firmware(&fw_dbg_config,
@@ -1873,7 +1873,7 @@ static void iwl_req_fw_callback(const struct firmware *ucode_raw, void *context)
	/* We have our copies now, allow OS release its copies */
	release_firmware(ucode_raw);

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (!load_fw_dbg_err)
		release_firmware(fw_dbg_config);
 #endif
@@ -1891,7 +1891,7 @@ static void iwl_req_fw_callback(const struct firmware *ucode_raw, void *context)
		break;
	}

-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
	if (iwlwifi_mod_params.xvt_default_mode && drv->fw.type == IWL_FW_MVM)
		op = &iwlwifi_opmode_table[XVT_OP_MODE];

@@ -1972,12 +1972,12 @@ struct iwl_drv *iwl_drv_start(struct iwl_trans *trans)
	init_completion(&drv->request_firmware_complete);
	INIT_LIST_HEAD(&drv->list);

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	trans->dbg_cfg = current_dbg_config;
	iwl_dbg_cfg_load_ini(drv->trans->dev, &drv->trans->dbg_cfg);
 #endif

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	/* Create the device debugfs entries. */
	drv->dbgfs_drv = debugfs_create_dir(dev_name(trans->dev),
					    iwl_dbgfs_root);
@@ -1986,7 +1986,7 @@ struct iwl_drv *iwl_drv_start(struct iwl_trans *trans)
	drv->trans->dbgfs_dir = debugfs_create_dir("trans", drv->dbgfs_drv);
 #endif

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	iwl_tm_gnl_add(drv->trans);
 #endif

@@ -1998,7 +1998,7 @@ struct iwl_drv *iwl_drv_start(struct iwl_trans *trans)
		goto err_fw;
	}

-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
	ret = iwl_create_sysfs_file(drv);
	if (ret) {
		IWL_ERR(trans, "Couldn't create sysfs entry\n");
@@ -2009,10 +2009,10 @@ struct iwl_drv *iwl_drv_start(struct iwl_trans *trans)
	return drv;

 err_fw:
-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	iwl_tm_gnl_remove(drv->trans);
 #endif
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	debugfs_remove_recursive(drv->dbgfs_drv);
 #endif
	iwl_dbg_tlv_free(drv->trans);
@@ -2039,22 +2039,22 @@ void iwl_drv_stop(struct iwl_drv *drv)
		list_del(&drv->list);
	mutex_unlock(&iwlwifi_opmode_table_mtx);

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	drv->trans->ops->debugfs_cleanup(drv->trans);

	debugfs_remove_recursive(drv->dbgfs_drv);
 #endif

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	iwl_dbg_cfg_free(&drv->trans->dbg_cfg);
 #endif
	iwl_dbg_tlv_free(drv->trans);

-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
	iwl_remove_sysfs_file(drv);
 #endif

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	iwl_tm_gnl_remove(drv->trans);
 #endif

@@ -2128,12 +2128,12 @@ static int __init iwl_drv_init(void)
	for (i = 0; i < ARRAY_SIZE(iwlwifi_opmode_table); i++)
		INIT_LIST_HEAD(&iwlwifi_opmode_table[i].drv);

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	if (iwl_tm_gnl_init())
		return -EFAULT;
 #endif

-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
	iwl_kobj = kobject_create_and_add("devices", &THIS_MODULE->mkobj.kobj);
	if (!iwl_kobj) {
		err = -ENOMEM;
@@ -2143,7 +2143,7 @@ static int __init iwl_drv_init(void)

	pr_info(DRV_DESCRIPTION "\n");

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	/* Create the root of iwlwifi debugfs subsystem. */
	iwl_dbgfs_root = debugfs_create_dir(DRV_NAME, NULL);
 #endif
@@ -2155,14 +2155,14 @@ static int __init iwl_drv_init(void)
	return 0;

 cleanup_debugfs:
-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
	kobject_put(iwl_kobj);
 cleanup_tm_gnl:
 #endif
-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	iwl_tm_gnl_exit();
 #endif
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	debugfs_remove_recursive(iwl_dbgfs_root);
 #endif
	return err;
@@ -2173,27 +2173,27 @@ static void __exit iwl_drv_exit(void)
 {
	iwl_pci_unregister_driver();

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	debugfs_remove_recursive(iwl_dbgfs_root);
 #endif

-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
	if (iwl_kobj)
		kobject_put(iwl_kobj);
 #endif

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	iwl_tm_gnl_exit();
 #endif
 }
 module_exit(iwl_drv_exit);

-#ifdef CPTCFG_IWLWIFI_DEBUG
+#ifdef CONFIG_IWLWIFI_DEBUG
 module_param_named(debug, iwlwifi_mod_params.debug_level, uint, 0644);
 MODULE_PARM_DESC(debug, "debug output mask");
 #endif

-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
 module_param_named(xvt_default_mode, iwlwifi_mod_params.xvt_default_mode,
		   bool, S_IRUGO);
 MODULE_PARM_DESC(xvt_default_mode, "xVT is the default operation mode (default: false)");
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-drv.h b/drivers/net/wireless/intel/iwlwifi/iwl-drv.h
index 3af14530cf335..daa3f236fcd80 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-drv.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-drv.h
@@ -153,7 +153,7 @@ int iwl_drv_switch_op_mode(struct iwl_drv *drv, const char *new_op_name);
  * must be exported for the sub-modules. However, if it's not split and
  * everything is built-in, then we can avoid that.
  */
-#ifdef CPTCFG_IWLWIFI_OPMODE_MODULAR
+#ifdef CONFIG_IWLWIFI_OPMODE_MODULAR
 #define IWL_EXPORT_SYMBOL(sym)	EXPORT_SYMBOL_GPL(sym)
 #else
 #define IWL_EXPORT_SYMBOL(sym)
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-io.c b/drivers/net/wireless/intel/iwlwifi/iwl-io.c
index 25c029f9072f1..ae2709b29c088 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-io.c
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-io.c
@@ -332,7 +332,7 @@ static int iwl_dump_rfh(struct iwl_trans *trans, char **buf)
		{ RFH_Q0_URBD_STTS_WPTR_LSB, true },
	};

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	if (buf) {
		int pos = 0;
		/*
@@ -428,7 +428,7 @@ int iwl_dump_fh(struct iwl_trans *trans, char **buf)
	if (trans->trans_cfg->mq_rx_supported)
		return iwl_dump_rfh(trans, buf);

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	if (buf) {
		int pos = 0;
		size_t bufsz = ARRAY_SIZE(fh_tbl) * 48 + 40;
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-modparams.h b/drivers/net/wireless/intel/iwlwifi/iwl-modparams.h
index a7b7ec95d06af..eefddfa8e370c 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-modparams.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-modparams.h
@@ -127,10 +127,10 @@ struct iwl_mod_params {
	int led_mode;
	bool power_save;
	int power_level;
-#ifdef CPTCFG_IWLWIFI_DEBUG
+#ifdef CONFIG_IWLWIFI_DEBUG
	u32 debug_level;
 #endif
-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
	bool xvt_default_mode;
 #endif
	char *nvm_file;
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c b/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c
index 78423f7504a78..4a7e09c7b6505 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c
@@ -574,7 +574,7 @@ static void iwl_init_vht_hw_capab(struct iwl_trans *trans,
			cpu_to_le16(IEEE80211_VHT_MCS_NOT_SUPPORTED << 2);
	}

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	vht_cap->cap ^= trans->dbg_cfg.vht_cap_flip;
 #endif

@@ -777,7 +777,7 @@ static void iwl_init_he_hw_capab(struct iwl_trans *trans,
	}
 }

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
 /* returns true iff there exists one spatial stream where MCS of a > b */
 static bool iwl_he_mcs_greater(u16 a, u16 b)
 {
@@ -1117,7 +1117,7 @@ static int iwl_set_hw_address(struct iwl_trans *trans,
			      struct iwl_nvm_data *data, const __be16 *nvm_hw,
			      const __le16 *mac_override)
 {
-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	struct iwl_dbg_cfg *dbg_cfg = &trans->dbg_cfg;

	if (dbg_cfg->hw_address.len) {
@@ -1230,7 +1230,7 @@ iwl_parse_nvm_data(struct iwl_trans *trans, const struct iwl_cfg *cfg,

	sku = iwl_get_sku(cfg, nvm_sw, phy_sku);

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (trans->dbg_cfg.disable_52GHz)
		/* remove support for 5.2 */
		sku &= ~NVM_SKU_CAP_BAND_52GHZ;
@@ -1282,7 +1282,7 @@ iwl_parse_nvm_data(struct iwl_trans *trans, const struct iwl_cfg *cfg,
		return NULL;
	}

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	iwl_init_he_override(trans, &data->bands[NL80211_BAND_2GHZ]);
	iwl_init_he_override(trans, &data->bands[NL80211_BAND_5GHZ]);
 #endif
@@ -1755,7 +1755,7 @@ struct iwl_nvm_data *iwl_get_nvm(struct iwl_trans *trans,
	iwl_set_hw_address_from_csr(trans, nvm);
	/* TODO: if platform NVM has MAC address - override it here */

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (trans->dbg_cfg.hw_address.len) {
		if (trans->dbg_cfg.hw_address.len == ETH_ALEN &&
		    is_valid_ether_addr(trans->dbg_cfg.hw_address.data))
@@ -1808,7 +1808,7 @@ struct iwl_nvm_data *iwl_get_nvm(struct iwl_trans *trans,
		sbands_flags |= IWL_NVM_SBANDS_FLAGS_LAR;
	}

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	iwl_init_he_override(trans, &nvm->bands[NL80211_BAND_2GHZ]);
	iwl_init_he_override(trans, &nvm->bands[NL80211_BAND_5GHZ]);
 #endif
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-op-mode.h b/drivers/net/wireless/intel/iwlwifi/iwl-op-mode.h
index b7ba7e6d20a0d..7415cafafa424 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-op-mode.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-op-mode.h
@@ -67,7 +67,7 @@
 #include <linux/netdevice.h>
 #include <linux/debugfs.h>

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
 #include "fw/testmode.h"
 #endif

@@ -106,7 +106,7 @@ struct iwl_tm_data;
  *	5) The driver layer stops the op_mode
  */

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
 /**
  * struct iwl_test_ops: callback to the op mode
  * @send_hcmd: Handler that sends host cmd in the specific op_mode. If this
@@ -187,7 +187,7 @@ struct iwl_op_mode_ops {
	void (*cmd_queue_full)(struct iwl_op_mode *op_mode);
	void (*nic_config)(struct iwl_op_mode *op_mode);
	void (*wimax_active)(struct iwl_op_mode *op_mode);
-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	struct iwl_test_ops test_ops;
 #endif
 };
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-phy-db.c b/drivers/net/wireless/intel/iwlwifi/iwl-phy-db.c
index 690682a25f229..fa0dd1425918a 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-phy-db.c
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-phy-db.c
@@ -322,7 +322,7 @@ static u16 channel_id_to_txp(struct iwl_phy_db *phy_db, u16 ch_id)
	}
	return 0xff;
 }
-#if !IS_ENABLED(CPTCFG_IWLXVT)
+#if !IS_ENABLED(CONFIG_IWLXVT)
 static
 #endif
 int iwl_phy_db_get_section_data(struct iwl_phy_db *phy_db,
@@ -353,7 +353,7 @@ int iwl_phy_db_get_section_data(struct iwl_phy_db *phy_db,

	return 0;
 }
-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
 IWL_EXPORT_SYMBOL(iwl_phy_db_get_section_data);
 #endif

diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-phy-db.h b/drivers/net/wireless/intel/iwlwifi/iwl-phy-db.h
index 394e602a9a18c..1e11f7f4cb8f3 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-phy-db.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-phy-db.h
@@ -72,7 +72,7 @@ int iwl_phy_db_set_section(struct iwl_phy_db *phy_db,
			   struct iwl_rx_packet *pkt);


-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
 int iwl_phy_db_get_section_data(struct iwl_phy_db *phy_db,
				u32 type, u8 **data, u16 *size, u16 ch_id);
 #endif
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-tm-gnl.c b/drivers/net/wireless/intel/iwlwifi/iwl-tm-gnl.c
index 55358f5e7fd8e..e71815814138e 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-tm-gnl.c
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-tm-gnl.c
@@ -379,7 +379,7 @@ static int iwl_tm_get_device_status(struct iwl_tm_gnl_dev *dev,
	return 0;
 }

-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
 static int iwl_tm_switch_op_mode(struct iwl_tm_gnl_dev *dev,
				 struct iwl_tm_data *data_in)
 {
@@ -744,7 +744,7 @@ static int iwl_tm_gnl_cmd_execute(struct iwl_tm_gnl_cmd *cmd_data)
					       &cmd_data->data_out);
		common_op = true;
		break;
-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
	case IWL_TM_USER_CMD_SWITCH_OP_MODE:
		ret = iwl_tm_switch_op_mode(dev, &cmd_data->data_in);
		common_op = true;
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-trans.h b/drivers/net/wireless/intel/iwlwifi/iwl-trans.h
index 735eedf54291f..3021bc0768cda 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-trans.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-trans.h
@@ -74,12 +74,12 @@
 #include "fw/img.h"
 #include "iwl-op-mode.h"
 #include <linux/firmware.h>
-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
 #include "iwl-dbg-cfg.h"
 #endif
 #include "fw/api/cmdhdr.h"
 #include "fw/api/txq.h"
-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
 #include "fw/testmode.h"
 #endif
 #include "fw/api/dbg-tlv.h"
@@ -119,7 +119,7 @@
  *	6) Eventually, the free function will be called.
  */

-#ifndef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifndef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
 #define IWL_TRANS_FW_DBG_DOMAIN(trans)	IWL_FW_INI_DOMAIN_ALWAYS_ON
 #else
 #define IWL_TRANS_FW_DBG_DOMAIN(trans)	((trans)->dbg_cfg.FW_DBG_DOMAIN)
@@ -592,7 +592,7 @@ struct iwl_trans_ops {

	int (*start_hw)(struct iwl_trans *iwl_trans);
	void (*op_mode_leave)(struct iwl_trans *iwl_trans);
-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
	int (*start_fw_dbg)(struct iwl_trans *trans, const struct fw_img *fw,
			    bool run_in_rfkill, u32 fw_dbg_flags);
	int (*test_mode_cmd)(struct iwl_trans *trans, bool enable);
@@ -733,7 +733,7 @@ enum iwl_ini_cfg_state {
 };

 /* Max time to wait for nmi interrupt */
-#define IWL_TRANS_NMI_TIMEOUT (HZ / 4 * CPTCFG_IWL_TIMEOUT_FACTOR)
+#define IWL_TRANS_NMI_TIMEOUT (HZ / 4 * CONFIG_IWL_TIMEOUT_FACTOR)

 /**
  * struct iwl_dram_data
@@ -1048,7 +1048,7 @@ struct iwl_trans {
	struct lockdep_map sync_cmd_lockdep_map;
 #endif

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	struct iwl_dbg_cfg dbg_cfg;
 #endif
	struct iwl_trans_debug dbg;
@@ -1056,7 +1056,7 @@ struct iwl_trans {

	enum iwl_plat_pm_mode system_pm_mode;

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	struct iwl_testmode testmode;
 #endif

@@ -1126,7 +1126,7 @@ static inline int iwl_trans_start_fw(struct iwl_trans *trans,
	return ret;
 }

-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
 enum iwl_xvt_dbg_flags {
	IWL_XVT_DBG_ADC_SAMP_TEST = BIT(0),
	IWL_XVT_DBG_ADC_SAMP_SYNC_RX = BIT(1),
@@ -1410,7 +1410,7 @@ static inline int iwl_trans_wait_txq_empty(struct iwl_trans *trans, int queue)
	return trans->ops->wait_txq_empty(trans, queue);
 }

-#if IS_ENABLED(CPTCFG_IWLXVT)
+#if IS_ENABLED(CONFIG_IWLXVT)
 static inline int iwl_trans_test_mode_cmd(struct iwl_trans *trans, bool enable)
 {
	if (trans->ops->test_mode_cmd)
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-vendor-cmd.h b/drivers/net/wireless/intel/iwlwifi/iwl-vendor-cmd.h
index cb3696566e453..8911efa742d77 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-vendor-cmd.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-vendor-cmd.h
@@ -89,7 +89,7 @@
  *	peer in the TDLS cache
  * @IWL_MVM_VENDOR_CMD_SET_NIC_TXPOWER_LIMIT: set the NIC's (SAR) TX power limit
  * @IWL_MVM_VENDOR_CMD_OPPPS_WA: wa to pass Sigma test - applicable code is
- *	claused under CPTCFG_IWLMVM_P2P_OPPPS_TEST_WA
+ *	claused under CONFIG_IWLMVM_P2P_OPPPS_TEST_WA
  * @IWL_MVM_VENDOR_CMD_GSCAN_GET_CAPABILITIES: get driver gscan capabilities as
  *	specified in %IWL_MVM_VENDOR_ATTR_GSCAN_*
  * @IWL_MVM_VENDOR_CMD_GSCAN_START: set gscan parameters and start gscan
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/Makefile b/drivers/net/wireless/intel/iwlwifi/mvm/Makefile
index 256e08b75010c..f03e350cbdb43 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/Makefile
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/Makefile
@@ -1,5 +1,5 @@
 # SPDX-License-Identifier: GPL-2.0
-obj-$(CPTCFG_IWLMVM)   += iwlmvm.o
+obj-$(CONFIG_IWLMVM)   += iwlmvm.o
 iwlmvm-y += fw.o mac80211.o nvm.o ops.o phy-ctxt.o mac-ctxt.o
 iwlmvm-y += utils.o rx.o rxmq.o tx.o binding.o quota.o sta.o sf.o
 iwlmvm-y += scan.o time-event.o rs.o rs-fw.o
@@ -8,11 +8,11 @@ iwlmvm-y += tt.o offloading.o tdls.o
 iwlmvm-y += ftm-initiator.o
 iwlmvm-y += ftm-responder.o
 iwlmvm-y += nan.o
-iwlmvm-$(CPTCFG_IWLWIFI_DEBUGFS) += debugfs.o debugfs-vif.o
-iwlmvm-$(CPTCFG_IWLWIFI_LEDS) += led.o
+iwlmvm-$(CONFIG_IWLWIFI_DEBUGFS) += debugfs.o debugfs-vif.o
+iwlmvm-$(CONFIG_IWLWIFI_LEDS) += led.o
 iwlmvm-$(CONFIG_PM) += d3.o

 ccflags-y += -I$(src)/../

 # non-upstream things
-iwlmvm-$(CPTCFG_IWLMVM_VENDOR_CMDS) += vendor-cmd.o
+iwlmvm-$(CONFIG_IWLMVM_VENDOR_CMDS) += vendor-cmd.o
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/constants.h b/drivers/net/wireless/intel/iwlwifi/mvm/constants.h
index de0df75f06b20..eb3342ba1203e 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/constants.h
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/constants.h
@@ -67,7 +67,7 @@

 #define IWL_MVM_UAPSD_NOAGG_BSSIDS_NUM		20

-#ifndef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifndef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
 #define IWL_MVM_DEFAULT_PS_TX_DATA_TIMEOUT	(100 * USEC_PER_MSEC)
 #define IWL_MVM_DEFAULT_PS_RX_DATA_TIMEOUT	(100 * USEC_PER_MSEC)
 #define IWL_MVM_WOWLAN_PS_TX_DATA_TIMEOUT	(10 * USEC_PER_MSEC)
@@ -164,7 +164,7 @@
 #define IWL_MVM_PHY_FILTER_CHAIN_C		0
 #define IWL_MVM_PHY_FILTER_CHAIN_D		0
 #define IWL_MVM_DISABLE_AP_FILS			false
-#else /* CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES */
+#else /* CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES */
 #define IWL_MVM_DEFAULT_PS_TX_DATA_TIMEOUT	(mvm->trans->dbg_cfg.MVM_DEFAULT_PS_TX_DATA_TIMEOUT)
 #define IWL_MVM_DEFAULT_PS_RX_DATA_TIMEOUT	(mvm->trans->dbg_cfg.MVM_DEFAULT_PS_RX_DATA_TIMEOUT)
 #define IWL_MVM_WOWLAN_PS_TX_DATA_TIMEOUT	(mvm->trans->dbg_cfg.MVM_WOWLAN_PS_TX_DATA_TIMEOUT)
@@ -264,6 +264,6 @@
 #define IWL_MVM_PHY_FILTER_CHAIN_D		(mvm->trans->dbg_cfg.MVM_PHY_FILTER_CHAIN_D)
 #define IWL_MVM_DISABLE_AP_FILS			(mvm->trans->dbg_cfg.MVM_DISABLE_AP_FILS)

-#endif /* CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES */
+#endif /* CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES */

 #endif /* __MVM_CONSTANTS_H */
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/d3.c b/drivers/net/wireless/intel/iwlwifi/mvm/d3.c
index bac4e1d7fa9d1..ee58b6b18f50e 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/d3.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/d3.c
@@ -1109,7 +1109,7 @@ static int __iwl_mvm_suspend(struct ieee80211_hw *hw,
	if (ret)
		goto out;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	if (mvm->d3_wake_sysassert)
		d3_cfg_cmd_data.wakeup_flags |=
			cpu_to_le32(IWL_WAKEUP_D3_CONFIG_FW_ERROR);
@@ -1129,7 +1129,7 @@ static int __iwl_mvm_suspend(struct ieee80211_hw *hw,
	ret = iwl_mvm_send_cmd(mvm, &d3_cfg_cmd);
	if (ret)
		goto out;
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	len = iwl_rx_packet_payload_len(d3_cfg_cmd.resp_pkt);
	if (len >= sizeof(u32)) {
		mvm->d3_test_pme_ptr =
@@ -1868,7 +1868,7 @@ iwl_mvm_netdetect_query_results(struct iwl_mvm *mvm,
	results->matched_profiles = le32_to_cpu(query->matched_profiles);
	memcpy(results->matches, query->matches, matches_len);

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	mvm->last_netdetect_scans = le32_to_cpu(query->n_scans_done);
 #endif

@@ -2189,7 +2189,7 @@ static int __iwl_mvm_resume(struct iwl_mvm *mvm, bool test)
		goto out;
	} else {
		keep = iwl_mvm_query_wakeup_reasons(mvm, vif);
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
		if (keep)
			mvm->keep_vif = vif;
 #endif
@@ -2257,7 +2257,7 @@ void iwl_mvm_set_wakeup(struct ieee80211_hw *hw, bool enabled)
	device_set_wakeup_enable(mvm->trans->dev, enabled);
 }

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 static int iwl_mvm_d3_test_open(struct inode *inode, struct file *file)
 {
	struct iwl_mvm *mvm = inode->i_private;
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/debugfs.c b/drivers/net/wireless/intel/iwlwifi/mvm/debugfs.c
index d13a20258d3c5..3c234e23c6ff4 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/debugfs.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/debugfs.c
@@ -70,7 +70,7 @@
 #include "iwl-modparams.h"
 #include "fw/error-dump.h"

-#ifdef CPTCFG_IWLWIFI_THERMAL_DEBUGFS
+#ifdef CONFIG_IWLWIFI_THERMAL_DEBUGFS
 static ssize_t iwl_dbgfs_tt_tx_backoff_write(struct iwl_mvm *mvm, char *buf,
					     size_t count, loff_t *ppos)
 {
@@ -1467,7 +1467,7 @@ static ssize_t iwl_dbgfs_fw_dbg_collect_write(struct iwl_mvm *mvm,
 }

 #define ADD_TEXT(...) pos += scnprintf(buf + pos, bufsz - pos, __VA_ARGS__)
-#ifdef CPTCFG_IWLWIFI_BCAST_FILTERING
+#ifdef CONFIG_IWLWIFI_BCAST_FILTERING
 static ssize_t iwl_dbgfs_bcast_filters_read(struct file *file,
					    char __user *user_buf,
					    size_t count, loff_t *ppos)
@@ -1843,7 +1843,7 @@ iwl_dbgfs_uapsd_noagg_bssids_read(struct file *file, char __user *user_buf,
	return simple_read_from_buffer(user_buf, count, ppos, buf, pos);
 }

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
 static ssize_t iwl_dbgfs_tx_power_status_read(struct file *file,
					      char __user *user_buf,
					      size_t count, loff_t *ppos)
@@ -2136,7 +2136,7 @@ static ssize_t iwl_dbgfs_csi_addresses_write(struct iwl_mvm *mvm, char *buf,

	return count;
 }
-#endif /* CPTCFG_IWLMVM_VENDOR_CMDS */
+#endif /* CONFIG_IWLMVM_VENDOR_CMDS */

 static ssize_t
 iwl_dbgfs_ltr_config_write(struct iwl_mvm *mvm,
@@ -2173,7 +2173,7 @@ iwl_dbgfs_ltr_config_write(struct iwl_mvm *mvm,
 MVM_DEBUGFS_READ_WRITE_FILE_OPS(prph_reg, 64);

 /* Device wide debugfs entries */
-#ifdef CPTCFG_IWLWIFI_THERMAL_DEBUGFS
+#ifdef CONFIG_IWLWIFI_THERMAL_DEBUGFS
 MVM_DEBUGFS_READ_WRITE_FILE_OPS(tt_tx_backoff, 64);
 #endif
 MVM_DEBUGFS_READ_FILE_OPS(ctdp_budget);
@@ -2205,7 +2205,7 @@ MVM_DEBUGFS_WRITE_FILE_OPS(indirection_tbl,
 MVM_DEBUGFS_WRITE_FILE_OPS(inject_packet, 512);
 MVM_DEBUGFS_WRITE_FILE_OPS(inject_beacon_ie, 512);
 MVM_DEBUGFS_WRITE_FILE_OPS(inject_beacon_ie_restore, 512);
-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
 MVM_DEBUGFS_READ_FILE_OPS(tx_power_status);
 MVM_DEBUGFS_READ_WRITE_FILE_OPS(csi_enabled, 8);
 MVM_DEBUGFS_READ_WRITE_FILE_OPS(csi_count, 32);
@@ -2219,7 +2219,7 @@ MVM_DEBUGFS_READ_WRITE_FILE_OPS(csi_addresses,

 MVM_DEBUGFS_READ_FILE_OPS(uapsd_noagg_bssids);

-#ifdef CPTCFG_IWLWIFI_BCAST_FILTERING
+#ifdef CONFIG_IWLWIFI_BCAST_FILTERING
 MVM_DEBUGFS_READ_WRITE_FILE_OPS(bcast_filters, 256);
 MVM_DEBUGFS_READ_WRITE_FILE_OPS(bcast_filters_macs, 256);
 #endif
@@ -2381,7 +2381,7 @@ void iwl_mvm_sta_add_debugfs(struct ieee80211_hw *hw,

 void iwl_mvm_dbgfs_register(struct iwl_mvm *mvm, struct dentry *dbgfs_dir)
 {
-#ifdef CPTCFG_IWLWIFI_THERMAL_DEBUGFS
+#ifdef CONFIG_IWLWIFI_THERMAL_DEBUGFS
	struct iwl_tt_params *tt_params = &mvm->thermal_throttle.params;
 #endif
	struct dentry *bcast_dir __maybe_unused;
@@ -2391,7 +2391,7 @@ void iwl_mvm_dbgfs_register(struct iwl_mvm *mvm, struct dentry *dbgfs_dir)

	mvm->debugfs_dir = dbgfs_dir;

-#ifdef CPTCFG_IWLWIFI_THERMAL_DEBUGFS
+#ifdef CONFIG_IWLWIFI_THERMAL_DEBUGFS
	MVM_DEBUGFS_ADD_FILE(tt_tx_backoff, dbgfs_dir, 0400);
 #endif
	MVM_DEBUGFS_ADD_FILE(tx_flush, mvm->debugfs_dir, 0200);
@@ -2425,7 +2425,7 @@ void iwl_mvm_dbgfs_register(struct iwl_mvm *mvm, struct dentry *dbgfs_dir)
 #ifdef CONFIG_ACPI
	MVM_DEBUGFS_ADD_FILE(sar_geo_profile, dbgfs_dir, 0400);
 #endif
-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	MVM_DEBUGFS_ADD_FILE(tx_power_status, mvm->debugfs_dir, 0400);

	if (fw_has_capa(&mvm->fw->ucode_capa,
@@ -2462,7 +2462,7 @@ void iwl_mvm_dbgfs_register(struct iwl_mvm *mvm, struct dentry *dbgfs_dir)

	MVM_DEBUGFS_ADD_FILE(uapsd_noagg_bssids, mvm->debugfs_dir, 0400);

-#ifdef CPTCFG_IWLWIFI_BCAST_FILTERING
+#ifdef CONFIG_IWLWIFI_BCAST_FILTERING
	if (mvm->fw->ucode_capa.flags & IWL_UCODE_TLV_FLAGS_BCAST_FILTERING) {
		bcast_dir = debugfs_create_dir("bcast_filtering",
					       mvm->debugfs_dir);
@@ -2500,7 +2500,7 @@ void iwl_mvm_dbgfs_register(struct iwl_mvm *mvm, struct dentry *dbgfs_dir)
	debugfs_create_blob("nvm_reg", S_IRUSR,
			    mvm->debugfs_dir, &mvm->nvm_reg_blob);

-#ifdef CPTCFG_IWLWIFI_THERMAL_DEBUGFS
+#ifdef CONFIG_IWLWIFI_THERMAL_DEBUGFS
	debugfs_create_u32("ct_kill_exit", 0600,
			   mvm->debugfs_dir,
			   &tt_params->ct_kill_exit);
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/ftm-initiator.c b/drivers/net/wireless/intel/iwlwifi/mvm/ftm-initiator.c
index 34748f1632e5c..15ac8f7f437ab 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/ftm-initiator.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/ftm-initiator.c
@@ -265,7 +265,7 @@ static void iwl_mvm_ftm_cmd_v5(struct iwl_mvm *mvm, struct ieee80211_vif *vif,
	cmd->request_id = req->cookie;
	cmd->num_of_ap = req->n_peers;

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (IWL_MVM_FTM_INITIATOR_COMMON_CALIB) {
		cmd->common_calib =
			cpu_to_le16(IWL_MVM_FTM_INITIATOR_COMMON_CALIB);
@@ -321,7 +321,7 @@ static void iwl_mvm_ftm_cmd_common(struct iwl_mvm *mvm,
	for (i = 0; i < ETH_ALEN; i++)
		cmd->macaddr_mask[i] = ~req->mac_addr_mask[i];

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (IWL_MVM_FTM_INITIATOR_FAST_ALGO_DISABLE)
		cmd->initiator_flags |=
			cpu_to_le32(IWL_TOF_INITIATOR_FLAGS_FAST_ALGO_DISABLED);
@@ -354,7 +354,7 @@ static void iwl_mvm_ftm_cmd_v8(struct iwl_mvm *mvm, struct ieee80211_vif *vif,
 {
	iwl_mvm_ftm_cmd_common(mvm, vif, (void *)cmd, req);

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (IWL_MVM_FTM_INITIATOR_COMMON_CALIB) {
		cmd->common_calib =
			cpu_to_le16(IWL_MVM_FTM_INITIATOR_COMMON_CALIB);
@@ -471,7 +471,7 @@ iwl_mvm_ftm_put_target_v2(struct iwl_mvm *mvm,
		target->location_req |= IWL_TOF_LOC_CIVIC;

	target->algo_type = IWL_MVM_FTM_INITIATOR_ALGO;
-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	target->notify_mcsi = IWL_MVM_FTM_INITIATOR_MCSI_ENABLED;
 #endif

@@ -516,7 +516,7 @@ iwl_mvm_ftm_put_target_common(struct iwl_mvm *mvm,
	else if (peer->ftm.non_trigger_based)
		FTM_PUT_FLAG(NON_TB);

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (IWL_MVM_FTM_INITIATOR_MCSI_ENABLED)
		FTM_PUT_FLAG(MCSI_REPORT);
 #endif
@@ -690,7 +690,7 @@ static int iwl_mvm_ftm_start_v8(struct iwl_mvm *mvm, struct ieee80211_vif *vif,
	return iwl_mvm_ftm_send_cmd(mvm, &hcmd);
 }

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
 static void iwl_mvm_ftm_set_calib(struct iwl_mvm *mvm,
				  struct iwl_tof_range_req_ap_entry_v6 *target)
 {
@@ -735,7 +735,7 @@ static int iwl_mvm_ftm_start_v9(struct iwl_mvm *mvm, struct ieee80211_vif *vif,
		if (err)
			return err;

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
		iwl_mvm_ftm_set_calib(mvm, target);
 #endif
	}
@@ -824,7 +824,7 @@ static int iwl_mvm_ftm_start_v11(struct iwl_mvm *mvm,
		if (err)
			return err;

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
		iwl_mvm_ftm_set_calib(mvm, (void *)target);
 #endif

diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/ftm-responder.c b/drivers/net/wireless/intel/iwlwifi/mvm/ftm-responder.c
index 582e4e3e422fe..8e27eda07a4d9 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/ftm-responder.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/ftm-responder.c
@@ -154,7 +154,7 @@ iwl_mvm_ftm_responder_cmd(struct iwl_mvm *mvm,

	lockdep_assert_held(&mvm->mutex);

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	cmd.cmd_valid_fields |= cpu_to_le32(IWL_MVM_FTM_RESP_VALID);
	cmd.responder_cfg_flags |= cpu_to_le32(IWL_MVM_FTM_RESP_FLAGS);

diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/fw.c b/drivers/net/wireless/intel/iwlwifi/mvm/fw.c
index 93b24e4be085e..68b7a2b7836aa 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/fw.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/fw.c
@@ -77,13 +77,13 @@
 #include "iwl-phy-db.h"
 #include "iwl-modparams.h"
 #include "iwl-nvm-parse.h"
-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
 #include "iwl-dnt-cfg.h"
 #include "fw/testmode.h"
 #endif

-#define MVM_UCODE_ALIVE_TIMEOUT	(HZ * CPTCFG_IWL_TIMEOUT_FACTOR)
-#define MVM_UCODE_CALIB_TIMEOUT	(2 * HZ * CPTCFG_IWL_TIMEOUT_FACTOR)
+#define MVM_UCODE_ALIVE_TIMEOUT	(HZ * CONFIG_IWL_TIMEOUT_FACTOR)
+#define MVM_UCODE_CALIB_TIMEOUT	(2 * HZ * CONFIG_IWL_TIMEOUT_FACTOR)

 #define UCODE_VALID_OK	cpu_to_le32(0x1)

@@ -300,7 +300,7 @@ static bool iwl_alive_fn(struct iwl_notif_wait_data *notif_wait,
	alive_data->scd_base_addr = le32_to_cpu(lmac1->dbg_ptrs.scd_base_ptr);
	alive_data->valid = status == IWL_ALIVE_STATUS_OK;

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	iwl_tm_set_fw_ver(mvm->trans, le32_to_cpu(lmac1->ucode_major),
			  le32_to_cpu(lmac1->ucode_minor));
 #endif
@@ -462,7 +462,7 @@ static int iwl_mvm_load_ucode_wait_alive(struct iwl_mvm *mvm,
		BIT(IWL_MAX_TID_COUNT + 2);

	set_bit(IWL_MVM_STATUS_FIRMWARE_RUNNING, &mvm->status);
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	iwl_fw_set_dbg_rec_on(&mvm->fwrt);
 #endif

@@ -621,7 +621,7 @@ static int iwl_send_phy_cfg_cmd(struct iwl_mvm *mvm)
	struct iwl_phy_specific_cfg phy_filters = {};
	u8 cmd_ver;
	size_t cmd_size;
-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	u32 override_mask, flow_override, flow_src;
	u32 event_override, event_src;
	const struct iwl_tlv_calib_ctrl *default_calib =
@@ -630,7 +630,7 @@ static int iwl_send_phy_cfg_cmd(struct iwl_mvm *mvm)

	if (iwl_mvm_has_unified_ucode(mvm) &&
	    !mvm->trans->cfg->tx_with_siso_diversity
-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	    && !mvm->trans->dbg_cfg.MVM_CALIB_OVERRIDE_CONTROL
 #endif
	   )
@@ -666,7 +666,7 @@ static int iwl_send_phy_cfg_cmd(struct iwl_mvm *mvm)
		       sizeof(struct iwl_phy_specific_cfg));
	}

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	override_mask = mvm->trans->dbg_cfg.MVM_CALIB_OVERRIDE_CONTROL;
	if (override_mask) {
		IWL_DEBUG_INFO(mvm,
@@ -769,7 +769,7 @@ int iwl_run_init_mvm_ucode(struct iwl_mvm *mvm)
		IWL_ERR(mvm, "Failed to start INIT ucode: %d\n", ret);
		goto remove_notif;
	}
-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	iwl_dnt_start(mvm->trans);
 #endif

@@ -1421,7 +1421,7 @@ static int iwl_mvm_sar_init(struct iwl_mvm *mvm)
				"EWRD SAR BIOS table invalid or unavailable. (%d)\n",
				ret);

-#if defined(CPTCFG_IWLMVM_VENDOR_CMDS) && defined(CONFIG_ACPI)
+#if defined(CONFIG_IWLMVM_VENDOR_CMDS) && defined(CONFIG_ACPI)
	/*
	 * if no profile was chosen by the user yet, choose profile 1 (WRDS) as
	 * default for both chains
@@ -1501,7 +1501,7 @@ int iwl_mvm_up(struct iwl_mvm *mvm)
	if (ret)
		IWL_ERR(mvm, "Failed to initialize Smart Fifo\n");

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	iwl_dnt_start(mvm->trans);
 #endif

@@ -1669,7 +1669,7 @@ int iwl_mvm_up(struct iwl_mvm *mvm)
	if (test_bit(IWL_MVM_STATUS_IN_HW_RESTART, &mvm->status))
		iwl_mvm_send_recovery_cmd(mvm, ERROR_RECOVERY_UPDATE_DB);

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	/* set_mode must be IWL_TX_POWER_MODE_SET_DEVICE if this was
	 * ever initialized.
	 */
@@ -1758,7 +1758,7 @@ int iwl_mvm_load_d3_fw(struct iwl_mvm *mvm)
		goto error;
	}

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	iwl_dnt_start(mvm->trans);
 #endif
	ret = iwl_send_tx_ant_cfg(mvm, iwl_mvm_get_valid_tx_ant(mvm));
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/mac-ctxt.c b/drivers/net/wireless/intel/iwlwifi/mvm/mac-ctxt.c
index 5b73e47b6277f..f9ce85b7b798f 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/mac-ctxt.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/mac-ctxt.c
@@ -611,7 +611,7 @@ static int iwl_mvm_mac_ctxt_cmd_sta(struct iwl_mvm *mvm,
	if (vif->p2p) {
		struct ieee80211_p2p_noa_attr *noa =
			&vif->bss_conf.p2p_noa_attr;
-#ifdef CPTCFG_IWLMVM_P2P_OPPPS_TEST_WA
+#ifdef CONFIG_IWLMVM_P2P_OPPPS_TEST_WA
		/*
		 * Pass CT window including OPPPS enable flag as part of a WA
		 * to pass P2P OPPPS certification test. Refer to
@@ -872,7 +872,7 @@ u8 iwl_mvm_mac_ctxt_get_lowest_rate(struct ieee80211_tx_info *info,
	else
		rate = IWL_FIRST_OFDM_RATE;

-#ifdef CPTCFG_IWLWIFI_FORCE_OFDM_RATE
+#ifdef CONFIG_IWLWIFI_FORCE_OFDM_RATE
	rate = IWL_FIRST_OFDM_RATE;
 #endif
	return rate;
@@ -1063,7 +1063,7 @@ int iwl_mvm_mac_ctxt_beacon_changed(struct iwl_mvm *mvm,
	if (!beacon)
		return -ENOMEM;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	if (mvm->beacon_inject_active)
		return -EBUSY;
 #endif
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c b/drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
index bf3085404df20..b69e17ef20781 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
@@ -82,18 +82,18 @@
 #include "fw/error-dump.h"
 #include "iwl-prph.h"
 #include "iwl-nvm-parse.h"
-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
 #include "iwl-dnt-cfg.h"
 #include "iwl-dnt-dispatch.h"
 #endif
-#ifdef CPTCFG_NL80211_TESTMODE
+#ifdef CONFIG_NL80211_TESTMODE
 #include "fw/testmode.h"
 #endif
 #include "fw/api/nan.h"

 static const struct ieee80211_iface_limit iwl_mvm_limits[] = {
	{
-		.max = CPTCFG_IWLWIFI_NUM_STA_INTERFACES,
+		.max = CONFIG_IWLWIFI_NUM_STA_INTERFACES,
		.types = BIT(NL80211_IFTYPE_STATION),
	},
	{
@@ -110,8 +110,8 @@ static const struct ieee80211_iface_limit iwl_mvm_limits[] = {

 static const struct ieee80211_iface_combination iwl_mvm_iface_combinations[] = {
	{
-		.num_different_channels = CPTCFG_IWLWIFI_NUM_CHANNELS,
-		.max_interfaces = CPTCFG_IWLWIFI_NUM_STA_INTERFACES + 2,
+		.num_different_channels = CONFIG_IWLWIFI_NUM_CHANNELS,
+		.max_interfaces = CONFIG_IWLWIFI_NUM_STA_INTERFACES + 2,
		.limits = iwl_mvm_limits,
		.n_limits = ARRAY_SIZE(iwl_mvm_limits),
	},
@@ -119,7 +119,7 @@ static const struct ieee80211_iface_combination iwl_mvm_iface_combinations[] = {

 static const struct ieee80211_iface_limit iwl_mvm_limits_nan[] = {
	{
-		.max =  CPTCFG_IWLWIFI_NUM_STA_INTERFACES,
+		.max =  CONFIG_IWLWIFI_NUM_STA_INTERFACES,
		.types = BIT(NL80211_IFTYPE_STATION),
	},
	{
@@ -141,14 +141,14 @@ static const struct ieee80211_iface_limit iwl_mvm_limits_nan[] = {
 static const struct ieee80211_iface_combination
 iwl_mvm_iface_combinations_nan[] = {
	{
-		.num_different_channels = CPTCFG_IWLWIFI_NUM_CHANNELS,
-		.max_interfaces = CPTCFG_IWLWIFI_NUM_STA_INTERFACES + 3,
+		.num_different_channels = CONFIG_IWLWIFI_NUM_CHANNELS,
+		.max_interfaces = CONFIG_IWLWIFI_NUM_STA_INTERFACES + 3,
		.limits = iwl_mvm_limits_nan,
		.n_limits = ARRAY_SIZE(iwl_mvm_limits_nan),
	},
 };

-#ifdef CPTCFG_IWLWIFI_BCAST_FILTERING
+#ifdef CONFIG_IWLWIFI_BCAST_FILTERING
 /*
  * Use the reserved field to indicate magic values.
  * these values will only be used internally by the driver,
@@ -642,7 +642,7 @@ int iwl_mvm_mac_setup_register(struct iwl_mvm *mvm)
	num_mac = (mvm->nvm_data->n_hw_addrs > 1) ?
		min(IWL_MVM_MAX_ADDRESSES, mvm->nvm_data->n_hw_addrs) : 1;

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (mvm->trans->dbg_cfg.hw_address.len)
		num_mac = IWL_MVM_MAX_ADDRESSES;
 #endif
@@ -789,7 +789,7 @@ int iwl_mvm_mac_setup_register(struct iwl_mvm *mvm)
	}
 #endif

-#ifdef CPTCFG_IWLWIFI_BCAST_FILTERING
+#ifdef CONFIG_IWLWIFI_BCAST_FILTERING
	/* assign default bcast filtering configuration */
	mvm->bcast_filters = iwl_mvm_default_bcast_filters;
 #endif
@@ -820,7 +820,7 @@ int iwl_mvm_mac_setup_register(struct iwl_mvm *mvm)
		wiphy_ext_feature_set(hw->wiphy,
				      NL80211_EXT_FEATURE_MU_MIMO_AIR_SNIFFER);

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	iwl_mvm_vendor_cmds_register(mvm);
 #endif

@@ -833,7 +833,7 @@ int iwl_mvm_mac_setup_register(struct iwl_mvm *mvm)

	ret = ieee80211_register_hw(mvm->hw);
	if (ret) {
-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
		iwl_mvm_vendor_cmds_unregister(mvm);
 #endif
		iwl_mvm_leds_exit(mvm);
@@ -1250,7 +1250,7 @@ static void iwl_mvm_restart_complete(struct iwl_mvm *mvm)
		IWL_ERR(mvm, "Failed to update quotas after restart (%d)\n",
			ret);

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	if (mvm->csi_cfg.flags & IWL_CHANNEL_ESTIMATION_ENABLE)
		iwl_mvm_send_csi_cmd(mvm);
 #endif
@@ -1714,7 +1714,7 @@ static void iwl_mvm_mac_remove_interface(struct ieee80211_hw *hw,
	 */
	if (vif->type == NL80211_IFTYPE_AP ||
	    vif->type == NL80211_IFTYPE_ADHOC) {
-#ifdef CPTCFG_NL80211_TESTMODE
+#ifdef CONFIG_NL80211_TESTMODE
		if (vif == mvm->noa_vif) {
			mvm->noa_vif = NULL;
			mvm->noa_duration = 0;
@@ -1725,7 +1725,7 @@ static void iwl_mvm_mac_remove_interface(struct ieee80211_hw *hw,
		goto out_release;
	}

-#ifdef CPTCFG_IWLMVM_P2P_OPPPS_TEST_WA
+#ifdef CONFIG_IWLMVM_P2P_OPPPS_TEST_WA
	if (mvmvif == mvm->p2p_opps_test_wa_vif)
		mvm->p2p_opps_test_wa_vif = NULL;
 #endif
@@ -1749,9 +1749,9 @@ static void iwl_mvm_mac_remove_interface(struct ieee80211_hw *hw,
	if (vif->type == NL80211_IFTYPE_MONITOR)
		mvm->monitor_on = false;

-#ifdef CPTCFG_IWLMVM_TDLS_PEER_CACHE
+#ifdef CONFIG_IWLMVM_TDLS_PEER_CACHE
	iwl_mvm_tdls_peer_cache_clear(mvm, vif);
-#endif /* CPTCFG_IWLMVM_TDLS_PEER_CACHE */
+#endif /* CONFIG_IWLMVM_TDLS_PEER_CACHE */

 out_release:
	mutex_unlock(&mvm->mutex);
@@ -1780,7 +1780,7 @@ static void iwl_mvm_mc_iface_iterator(void *_data, u8 *mac,
	};
	int ret, len;

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	if (!(mvm->rx_filters & IWL_MVM_VENDOR_RXFILTER_EINVAL) &&
	    mvm->mcast_active_filter_cmd)
		cmd = mvm->mcast_active_filter_cmd;
@@ -1806,7 +1806,7 @@ static void iwl_mvm_mc_iface_iterator(void *_data, u8 *mac,
		IWL_ERR(mvm, "mcast filter cmd error. ret=%d\n", ret);
 }

-#ifndef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifndef CONFIG_IWLMVM_VENDOR_CMDS
 static
 #endif
 void iwl_mvm_recalc_multicast(struct iwl_mvm *mvm)
@@ -1885,7 +1885,7 @@ static void iwl_mvm_configure_filter(struct ieee80211_hw *hw,
	if (cmd->pass_all)
		cmd->count = 0;

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	iwl_mvm_active_rx_filters(mvm);
 #endif
	iwl_mvm_recalc_multicast(mvm);
@@ -1915,7 +1915,7 @@ static void iwl_mvm_config_iface_filter(struct ieee80211_hw *hw,
	mutex_unlock(&mvm->mutex);
 }

-#ifdef CPTCFG_IWLWIFI_BCAST_FILTERING
+#ifdef CONFIG_IWLWIFI_BCAST_FILTERING
 struct iwl_bcast_iter_data {
	struct iwl_mvm *mvm;
	struct iwl_bcast_filter_cmd *cmd;
@@ -2028,7 +2028,7 @@ bool iwl_mvm_bcast_filter_build_cmd(struct iwl_mvm *mvm,
	cmd->max_bcast_filters = ARRAY_SIZE(cmd->filters);
	cmd->max_macs = ARRAY_SIZE(cmd->macs);

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	/* use debugfs filters/macs if override is configured */
	if (mvm->dbgfs_bcast_filtering.override) {
		memcpy(cmd->filters, &mvm->dbgfs_bcast_filtering.cmd.filters,
@@ -2043,7 +2043,7 @@ bool iwl_mvm_bcast_filter_build_cmd(struct iwl_mvm *mvm,
	if (!mvm->bcast_filters)
		return false;

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	if (!(mvm->rx_filters & IWL_MVM_VENDOR_RXFILTER_EINVAL) &&
	    mvm->rx_filters & IWL_MVM_VENDOR_RXFILTER_BCAST) {
		cmd->disable = 1;
@@ -2373,7 +2373,7 @@ static void iwl_mvm_cfg_he_sta(struct iwl_mvm *mvm,
			    IEEE80211_HE_MAC_CAP2_ACK_EN))
		flags |= STA_CTXT_HE_NIC_NOT_ACK_ENABLED;

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (mvm->trans->dbg_cfg.no_ack_en & 0x2)
		flags &= ~STA_CTXT_HE_ACK_ENABLED;

@@ -4566,7 +4566,7 @@ static int iwl_mvm_set_tim(struct ieee80211_hw *hw,
	return iwl_mvm_mac_ctxt_beacon_changed(mvm, mvm_sta->vif);
 }

-#ifdef CPTCFG_NL80211_TESTMODE
+#ifdef CONFIG_NL80211_TESTMODE
 static const struct nla_policy iwl_mvm_tm_policy[IWL_TM_ATTR_MAX + 1] = {
	[IWL_TM_ATTR_CMD] = { .type = NLA_U32 },
	[IWL_TM_ATTR_NOA_DURATION] = { .type = NLA_U32 },
@@ -5255,7 +5255,7 @@ static void iwl_mvm_mac_event_callback(struct ieee80211_hw *hw,
	}
 }

-#define SYNC_RX_QUEUE_TIMEOUT (HZ * CPTCFG_IWL_TIMEOUT_FACTOR)
+#define SYNC_RX_QUEUE_TIMEOUT (HZ * CONFIG_IWL_TIMEOUT_FACTOR)
 void iwl_mvm_sync_rx_queues_internal(struct iwl_mvm *mvm,
				     struct iwl_mvm_internal_rxq_notif *notif,
				     u32 size)
@@ -5478,7 +5478,7 @@ const struct ieee80211_ops iwl_mvm_hw_ops = {
	.del_nan_func = iwl_mvm_del_nan_func,

	.can_aggregate_in_amsdu = iwl_mvm_mac_can_aggregate,
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	.sta_add_debugfs = iwl_mvm_sta_add_debugfs,
 #endif
 };
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/mvm.h b/drivers/net/wireless/intel/iwlwifi/mvm/mvm.h
index 4ca62c2a6c2e4..3ab83744df424 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/mvm.h
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/mvm.h
@@ -189,7 +189,7 @@ enum iwl_power_scheme {
 #define IWL_CONN_MAX_LISTEN_INTERVAL	10
 #define IWL_UAPSD_MAX_SP		IEEE80211_WMM_IE_STA_QOSINFO_SP_ALL

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 enum iwl_dbgfs_pm_mask {
	MVM_DEBUGFS_PM_KEEP_ALIVE = BIT(0),
	MVM_DEBUGFS_PM_SKIP_OVER_DTIM = BIT(1),
@@ -440,7 +440,7 @@ struct iwl_mvm_vif {
	int num_target_ipv6_addrs;
 #endif

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	struct dentry *dbgfs_dir;
	struct dentry *dbgfs_slink;
	struct iwl_dbgfs_pm dbgfs_pm;
@@ -654,7 +654,7 @@ struct iwl_mvm_tcm {
	} result;
 };

-#ifdef CPTCFG_IWLMVM_TDLS_PEER_CACHE
+#ifdef CONFIG_IWLMVM_TDLS_PEER_CACHE
 #define IWL_MVM_TDLS_CNT_MAX_PEERS 4

 struct iwl_mvm_tdls_peer_counter {
@@ -842,7 +842,7 @@ struct iwl_mvm_dqa_txq_info {
	enum iwl_mvm_queue_status status;
 };

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
 struct iwl_csi_data_buffer {
	struct page *page;
	unsigned int offset;
@@ -951,10 +951,10 @@ struct iwl_mvm {
	/* rx chain antennas set through debugfs for the scan command */
	u8 scan_rx_ant;

-#ifdef CPTCFG_IWLWIFI_BCAST_FILTERING
+#ifdef CONFIG_IWLWIFI_BCAST_FILTERING
	/* broadcast filters to configure for each associated station */
	const struct iwl_fw_bcast_filter *bcast_filters;
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	struct {
		bool override;
		struct iwl_bcast_filter_cmd cmd;
@@ -974,7 +974,7 @@ struct iwl_mvm {
	/* last smart fifo state that was successfully sent to firmware */
	enum iwl_sf_state sf_state;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	struct dentry *debugfs_dir;
	u32 dbgfs_sram_offset, dbgfs_sram_len;
	u32 dbgfs_prph_reg_addr;
@@ -1014,7 +1014,7 @@ struct iwl_mvm {
	s8 fw_restart;
	u8 *error_recovery_buf;

-#ifdef CPTCFG_IWLWIFI_LEDS
+#ifdef CONFIG_IWLWIFI_LEDS
	struct led_classdev led;
 #endif

@@ -1032,7 +1032,7 @@ struct iwl_mvm {
	int n_nd_channels;
	bool net_detect;
	u8 offload_tid;
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	bool d3_wake_sysassert;
	bool d3_test_active;
	u32 d3_test_pme_ptr;
@@ -1076,14 +1076,14 @@ struct iwl_mvm {

	struct iwl_mvm_tcm tcm;

-#ifdef CPTCFG_IWLMVM_TDLS_PEER_CACHE
+#ifdef CONFIG_IWLMVM_TDLS_PEER_CACHE
	struct list_head tdls_peer_cache_list;
	u32 tdls_peer_cache_cnt;
 #endif

	struct iwl_time_quota_cmd last_quota_cmd;

-#ifdef CPTCFG_NL80211_TESTMODE
+#ifdef CONFIG_NL80211_TESTMODE
	u32 noa_duration;
	struct ieee80211_vif *noa_vif;
 #endif
@@ -1137,11 +1137,11 @@ struct iwl_mvm {
		} peer;
	} tdls_cs;

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	struct iwl_dev_tx_power_cmd txp_cmd;
 #endif

-#ifdef CPTCFG_IWLMVM_P2P_OPPPS_TEST_WA
+#ifdef CONFIG_IWLMVM_P2P_OPPPS_TEST_WA
	/*
	 * Add the following as part of a WA to pass P2P OPPPS certification
	 * test. Refer to IWLMVM_P2P_OPPPS_TEST_WA description in
@@ -1167,7 +1167,7 @@ struct iwl_mvm {

	struct list_head resp_pasn_list;

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	struct iwl_mcast_filter_cmd *mcast_active_filter_cmd;
	u8 rx_filters;

@@ -1192,11 +1192,11 @@ struct iwl_mvm {

	struct list_head list;

-#endif /* CPTCFG_IWLMVM_VENDOR_CMDS */
+#endif /* CONFIG_IWLMVM_VENDOR_CMDS */
	struct {
-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
		u8 csi_notif;
-#endif /* CPTCFG_IWLMVM_VENDOR_CMDS */
+#endif /* CONFIG_IWLMVM_VENDOR_CMDS */
		u8 d0i3_resp;
		u8 range_resp;
	} cmd_ver;
@@ -1599,7 +1599,7 @@ unsigned int iwl_mvm_max_amsdu_size(struct iwl_mvm *mvm,
				    struct ieee80211_sta *sta,
				    unsigned int tid);

-#ifdef CPTCFG_IWLWIFI_DEBUG
+#ifdef CONFIG_IWLWIFI_DEBUG
 const char *iwl_mvm_get_tx_fail_reason(u32 status);
 #else
 static inline const char *iwl_mvm_get_tx_fail_reason(u32 status) { return ""; }
@@ -1824,7 +1824,7 @@ void iwl_mvm_rx_umac_scan_iter_complete_notif(struct iwl_mvm *mvm,
					      struct iwl_rx_cmd_buffer *rxb);

 /* MVM debugfs */
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 void iwl_mvm_dbgfs_register(struct iwl_mvm *mvm, struct dentry *dbgfs_dir);
 void iwl_mvm_vif_dbgfs_register(struct iwl_mvm *mvm, struct ieee80211_vif *vif);
 void iwl_mvm_vif_dbgfs_clean(struct iwl_mvm *mvm, struct ieee80211_vif *vif);
@@ -1841,7 +1841,7 @@ static inline void
 iwl_mvm_vif_dbgfs_clean(struct iwl_mvm *mvm, struct ieee80211_vif *vif)
 {
 }
-#endif /* CPTCFG_IWLWIFI_DEBUGFS */
+#endif /* CONFIG_IWLWIFI_DEBUGFS */

 /* rate scaling */
 int iwl_mvm_send_lq_cmd(struct iwl_mvm *mvm, struct iwl_lq_cmd *lq);
@@ -1862,7 +1862,7 @@ void iwl_mvm_power_vif_assoc(struct iwl_mvm *mvm, struct ieee80211_vif *vif);
 void iwl_mvm_power_uapsd_misbehaving_ap_notif(struct iwl_mvm *mvm,
					      struct iwl_rx_cmd_buffer *rxb);

-#ifdef CPTCFG_IWLWIFI_LEDS
+#ifdef CONFIG_IWLWIFI_LEDS
 int iwl_mvm_leds_init(struct iwl_mvm *mvm);
 void iwl_mvm_leds_exit(struct iwl_mvm *mvm);
 void iwl_mvm_leds_sync(struct iwl_mvm *mvm);
@@ -1930,7 +1930,7 @@ u8 iwl_mvm_bt_coex_tx_prio(struct iwl_mvm *mvm, struct ieee80211_hdr *hdr,
			   struct ieee80211_tx_info *info, u8 ac);

 /* beacon filtering */
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 void
 iwl_mvm_beacon_filter_debugfs_parameters(struct ieee80211_vif *vif,
					 struct iwl_beacon_filter_cmd *cmd);
@@ -2129,14 +2129,14 @@ void iwl_mvm_tdls_cancel_channel_switch(struct ieee80211_hw *hw,
 void iwl_mvm_rx_tdls_notif(struct iwl_mvm *mvm, struct iwl_rx_cmd_buffer *rxb);
 void iwl_mvm_tdls_ch_switch_work(struct work_struct *work);

-#ifdef CPTCFG_IWLMVM_TDLS_PEER_CACHE
+#ifdef CONFIG_IWLMVM_TDLS_PEER_CACHE
 void iwl_mvm_tdls_peer_cache_pkt(struct iwl_mvm *mvm, struct ieee80211_hdr *hdr,
				 u32 len, int rxq);
 void iwl_mvm_tdls_peer_cache_clear(struct iwl_mvm *mvm,
				   struct ieee80211_vif *vif);
 struct iwl_mvm_tdls_peer_counter *
 iwl_mvm_tdls_peer_cache_find(struct iwl_mvm *mvm, const u8 *addr);
-#endif /* CPTCFG_IWLMVM_TDLS_PEER_CACHE */
+#endif /* CONFIG_IWLMVM_TDLS_PEER_CACHE */
 void iwl_mvm_sync_rx_queues_internal(struct iwl_mvm *mvm,
				     struct iwl_mvm_internal_rxq_notif *notif,
				     u32 size);
@@ -2166,7 +2166,7 @@ void iwl_mvm_event_frame_timeout_callback(struct iwl_mvm *mvm,
					  const struct ieee80211_sta *sta,
					  u16 tid);

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
 void iwl_mvm_send_tcm_event(struct iwl_mvm *mvm, struct ieee80211_vif *vif);

 void iwl_mvm_recalc_multicast(struct iwl_mvm *mvm);
@@ -2201,7 +2201,7 @@ int iwl_mvm_nan_config_nan_faw_cmd(struct iwl_mvm *mvm,
 int iwl_mvm_sar_select_profile(struct iwl_mvm *mvm, int prof_a, int prof_b);
 int iwl_mvm_get_sar_geo_profile(struct iwl_mvm *mvm);
 int iwl_mvm_ppag_send_cmd(struct iwl_mvm *mvm);
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 void iwl_mvm_sta_add_debugfs(struct ieee80211_hw *hw,
			     struct ieee80211_vif *vif,
			     struct ieee80211_sta *sta,
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/nvm.c b/drivers/net/wireless/intel/iwlwifi/mvm/nvm.c
index 35e7200a56507..b732cc192483f 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/nvm.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/nvm.c
@@ -393,7 +393,7 @@ int iwl_nvm_init(struct iwl_mvm *mvm)
		mvm->nvm_sections[section].data = temp;
		mvm->nvm_sections[section].length = ret;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
		switch (section) {
		case NVM_SECTION_TYPE_SW:
			mvm->nvm_sw_blob.data = temp;
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/ops.c b/drivers/net/wireless/intel/iwlwifi/mvm/ops.c
index e118d0f3c4b30..64e2f2fe95245 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/ops.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/ops.c
@@ -83,7 +83,7 @@
 #include "fw/api/nan.h"
 #include "fw/acpi.h"

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
 #include "iwl-dnt-cfg.h"
 #include "iwl-dnt-dispatch.h"
 #include "iwl-tm-gnl.h"
@@ -109,7 +109,7 @@ module_param_named(power_scheme, iwlmvm_mod_params.power_scheme, int, 0444);
 MODULE_PARM_DESC(power_scheme,
		 "power management scheme: 1-active, 2-balanced, 3-low power, default: 2");

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
 static void iwl_mvm_rx_fw_logs(struct iwl_mvm *mvm,
			       struct iwl_rx_cmd_buffer *rxb)
 {
@@ -134,7 +134,7 @@ static int __init iwl_mvm_init(void)
	if (ret)
		pr_err("Unable to register MVM op_mode: %d\n", ret);

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	iwl_mvm_vendor_cmd_init();
 #endif

@@ -146,7 +146,7 @@ static void __exit iwl_mvm_exit(void)
 {
	iwl_opmode_deregister("iwlmvm");
	iwl_mvm_rate_control_unregister();
-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	iwl_mvm_vendor_cmd_exit();
 #endif
 }
@@ -270,12 +270,12 @@ static const struct iwl_rx_handlers iwl_mvm_rx_handlers[] = {
	RX_HANDLER_GRP(DATA_PATH_GROUP, TLC_MNG_UPDATE_NOTIF,
		       iwl_mvm_tlc_update_notif, RX_HANDLER_SYNC),

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	RX_HANDLER_GRP(LOCATION_GROUP, CSI_HEADER_NOTIFICATION,
		       iwl_mvm_rx_csi_header, RX_HANDLER_ASYNC_LOCKED),
	RX_HANDLER_GRP(LOCATION_GROUP, CSI_CHUNKS_NOTIFICATION,
		       iwl_mvm_rx_csi_chunk, RX_HANDLER_ASYNC_LOCKED),
-#endif /* CPTCFG_IWLMVM_VENDOR_CMDS */
+#endif /* CONFIG_IWLMVM_VENDOR_CMDS */

	RX_HANDLER(BT_PROFILE_NOTIFICATION, iwl_mvm_rx_bt_coex_notif,
		   RX_HANDLER_ASYNC_LOCKED),
@@ -344,19 +344,19 @@ static const struct iwl_rx_handlers iwl_mvm_rx_handlers[] = {
		       iwl_mvm_mu_mimo_grp_notif, RX_HANDLER_SYNC),
	RX_HANDLER_GRP(DATA_PATH_GROUP, STA_PM_NOTIF,
		       iwl_mvm_sta_pm_notif, RX_HANDLER_SYNC),
-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	RX_HANDLER_GRP(NAN_GROUP, NAN_DISCOVERY_TERMINATE_NOTIF,
		       iwl_mvm_nan_de_term_notif, RX_HANDLER_SYNC),
	RX_HANDLER_GRP(NAN_GROUP, NAN_DISCOVERY_EVENT_NOTIF,
		       iwl_mvm_nan_match, RX_HANDLER_SYNC),
-#endif /* CPTCFG_IWLMVM_VENDOR_CMDS */
+#endif /* CONFIG_IWLMVM_VENDOR_CMDS */
	RX_HANDLER_GRP(MAC_CONF_GROUP, PROBE_RESPONSE_DATA_NOTIF,
		       iwl_mvm_probe_resp_data_notif,
		       RX_HANDLER_ASYNC_LOCKED),
	RX_HANDLER_GRP(MAC_CONF_GROUP, CHANNEL_SWITCH_NOA_NOTIF,
		       iwl_mvm_channel_switch_noa_notif,
		       RX_HANDLER_SYNC),
-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	RX_HANDLER(DEBUG_LOG_MSG, iwl_mvm_rx_fw_logs, RX_HANDLER_SYNC),
 #endif
 };
@@ -624,7 +624,7 @@ static void iwl_mvm_tx_unblock_dwork(struct work_struct *work)
	mutex_unlock(&mvm->mutex);
 }

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
 static void iwl_mvm_init_modparams(struct iwl_mvm *mvm)
 {
 #define IWL_DBG_CFG(t, n)			/* nothing */
@@ -692,7 +692,7 @@ static const struct iwl_fw_runtime_ops iwl_mvm_fwrt_ops = {
	.d3_debug_enable = iwl_mvm_d3_debug_enable,
 };

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
 static int iwl_mvm_tm_send_hcmd(void *op_mode, struct iwl_host_cmd *host_cmd)
 {
	struct iwl_mvm *mvm = (struct iwl_mvm *)op_mode;
@@ -738,7 +738,7 @@ iwl_op_mode_mvm_start(struct iwl_trans *trans, const struct iwl_cfg *cfg,

	hw->max_rx_aggregation_subframes = IEEE80211_MAX_AMPDU_BUF;

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (trans->dbg_cfg.rx_agg_subframes)
		hw->max_rx_aggregation_subframes =
			trans->dbg_cfg.rx_agg_subframes;
@@ -812,13 +812,13 @@ iwl_op_mode_mvm_start(struct iwl_trans *trans, const struct iwl_cfg *cfg,

	init_waitqueue_head(&mvm->rx_sync_waitq);

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	/*
	 * by default capture all frame types
	 * (but of course leave it disabled)
	 */
	mvm->csi_cfg.frame_types = ~0ULL;
-#endif /* CPTCFG_IWLMVM_VENDOR_CMDS */
+#endif /* CONFIG_IWLMVM_VENDOR_CMDS */

	mvm->queue_sync_state = 0;

@@ -830,17 +830,17 @@ iwl_op_mode_mvm_start(struct iwl_trans *trans, const struct iwl_cfg *cfg,
	mvm->tcm.ll_ts = jiffies;
	mvm->tcm.uapsd_nonagg_ts = jiffies;

-#ifdef CPTCFG_IWLMVM_TDLS_PEER_CACHE
+#ifdef CONFIG_IWLMVM_TDLS_PEER_CACHE
	INIT_LIST_HEAD(&mvm->tdls_peer_cache_list);
 #endif

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	mvm->rx_filters = IWL_MVM_VENDOR_RXFILTER_EINVAL;
 #endif

	INIT_DELAYED_WORK(&mvm->cs_tx_unblock_dwork, iwl_mvm_tx_unblock_dwork);

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	/* set command/notification versions we care about */
	mvm->cmd_ver.csi_notif =
		iwl_fw_lookup_notif_ver(mvm->fw, LOCATION_GROUP,
@@ -935,7 +935,7 @@ iwl_op_mode_mvm_start(struct iwl_trans *trans, const struct iwl_cfg *cfg,
	/* set up notification wait support */
	iwl_notification_wait_init(&mvm->notif_wait);

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	iwl_dnt_init(mvm->trans, dbgfs_dir);
	iwl_tm_init(trans, mvm->fw, &mvm->mutex, mvm);
 #endif
@@ -952,7 +952,7 @@ iwl_op_mode_mvm_start(struct iwl_trans *trans, const struct iwl_cfg *cfg,

	if (iwlwifi_mod_params.nvm_file)
		mvm->nvm_file_name = iwlwifi_mod_params.nvm_file;
-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	else if (trans->dbg_cfg.nvm_file)
		mvm->nvm_file_name = trans->dbg_cfg.nvm_file;
 #endif
@@ -1001,7 +1001,7 @@ iwl_op_mode_mvm_start(struct iwl_trans *trans, const struct iwl_cfg *cfg,
	else
		memset(&mvm->rx_stats, 0, sizeof(struct mvm_statistics_rx));

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	iwl_mvm_init_modparams(mvm);
 #endif

@@ -1015,7 +1015,7 @@ iwl_op_mode_mvm_start(struct iwl_trans *trans, const struct iwl_cfg *cfg,

	if (iwlmvm_mod_params.init_dbg)
		return op_mode;
-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	iwl_dnt_free(trans);
 #endif
	iwl_phy_db_free(mvm->phy_db);
@@ -1058,7 +1058,7 @@ static void iwl_op_mode_mvm_stop(struct iwl_op_mode *op_mode)
	kfree(mvm->error_recovery_buf);
	mvm->error_recovery_buf = NULL;

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
	kfree(mvm->mcast_active_filter_cmd);
	mvm->mcast_active_filter_cmd = NULL;
	iwl_mvm_vendor_cmds_unregister(mvm);
@@ -1069,7 +1069,7 @@ static void iwl_op_mode_mvm_stop(struct iwl_op_mode *op_mode)
	iwl_phy_db_free(mvm->phy_db);
	mvm->phy_db = NULL;

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	iwl_dnt_free(mvm->trans);
 #endif
	kfree(mvm->nvm_data);
@@ -1078,9 +1078,9 @@ static void iwl_op_mode_mvm_stop(struct iwl_op_mode *op_mode)

	cancel_delayed_work_sync(&mvm->tcm.work);

-#ifdef CPTCFG_IWLMVM_TDLS_PEER_CACHE
+#ifdef CONFIG_IWLMVM_TDLS_PEER_CACHE
	iwl_mvm_tdls_peer_cache_clear(mvm, NULL);
-#endif /* CPTCFG_IWLMVM_TDLS_PEER_CACHE */
+#endif /* CONFIG_IWLMVM_TDLS_PEER_CACHE */

	iwl_fw_runtime_free(&mvm->fwrt);
	mutex_destroy(&mvm->mutex);
@@ -1223,7 +1223,7 @@ static void iwl_mvm_rx(struct iwl_op_mode *op_mode,
	struct iwl_mvm *mvm = IWL_OP_MODE_GET_MVM(op_mode);
	u16 cmd = WIDE_ID(pkt->hdr.group_id, pkt->hdr.cmd);

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	/*
	 * RX data may be forwarded to userspace in case the user
	 * requested to monitor the rx w/o affecting the regular flow.
@@ -1249,7 +1249,7 @@ static void iwl_mvm_rx_mq(struct iwl_op_mode *op_mode,
	struct iwl_mvm *mvm = IWL_OP_MODE_GET_MVM(op_mode);
	u16 cmd = WIDE_ID(pkt->hdr.group_id, pkt->hdr.cmd);

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	/*
	 * RX data may be forwarded to userspace in case the user
	 * requested to monitor the rx w/o affecting the regular flow.
@@ -1516,7 +1516,7 @@ void iwl_mvm_nic_restart(struct iwl_mvm *mvm, bool fw_error)
		}

		iwl_fw_error_collect(&mvm->fwrt);
-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
		iwl_dnt_dispatch_handle_nic_err(mvm->trans);
 #endif

@@ -1557,7 +1557,7 @@ static void iwl_mvm_cmd_queue_full(struct iwl_op_mode *op_mode)
	/* as we only register one, these MUST be common! */	\
	.start = iwl_op_mode_mvm_start,				\
	.stop = iwl_op_mode_mvm_stop
-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
 #define IWL_MVM_COMMON_TEST_OPS					\
	.test_ops = {						\
		.send_hcmd = iwl_mvm_tm_send_hcmd,		\
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/phy-ctxt.c b/drivers/net/wireless/intel/iwlwifi/mvm/phy-ctxt.c
index cfb77bdbc0865..bf2fc44dcb8da 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/phy-ctxt.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/phy-ctxt.c
@@ -160,7 +160,7 @@ static void iwl_mvm_phy_ctxt_set_rxchain(struct iwl_mvm *mvm,
	*rxchain_info |= cpu_to_le32(idle_cnt << PHY_RX_CHAIN_CNT_POS);
	*rxchain_info |= cpu_to_le32(active_cnt <<
					 PHY_RX_CHAIN_MIMO_CNT_POS);
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	if (unlikely(mvm->dbgfs_rx_phyinfo))
		*rxchain_info = cpu_to_le32(mvm->dbgfs_rx_phyinfo);
 #endif
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/power.c b/drivers/net/wireless/intel/iwlwifi/mvm/power.c
index 9affa48518b04..d1a9dd285d7c7 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/power.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/power.c
@@ -186,14 +186,14 @@ static void iwl_mvm_power_configure_uapsd(struct iwl_mvm *mvm,
	enum ieee80211_ac_numbers ac;
	bool tid_found = false;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	/* set advanced pm flag with no uapsd ACs to enable ps-poll */
	if (mvmvif->dbgfs_pm.use_ps_poll) {
		cmd->flags |= cpu_to_le16(POWER_FLAGS_ADVANCE_PM_ENA_MSK);
		return;
	}
 #endif
-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (mvm->trans->dbg_cfg.MVM_USE_PS_POLL) {
		cmd->flags |= cpu_to_le16(POWER_FLAGS_ADVANCE_PM_ENA_MSK);
		return;
@@ -472,7 +472,7 @@ static void iwl_mvm_power_build_cmd(struct iwl_mvm *mvm,
	if (iwl_mvm_power_allow_uapsd(mvm, vif))
		iwl_mvm_power_configure_uapsd(mvm, vif, cmd);

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	if (mvmvif->dbgfs_pm.mask & MVM_DEBUGFS_PM_KEEP_ALIVE)
		cmd->keep_alive_seconds =
			cpu_to_le16(mvmvif->dbgfs_pm.keep_alive_seconds);
@@ -515,7 +515,7 @@ static void iwl_mvm_power_build_cmd(struct iwl_mvm *mvm,
		else
			cmd->flags &= cpu_to_le16(flag);
	}
-#endif /* CPTCFG_IWLWIFI_DEBUGFS */
+#endif /* CONFIG_IWLWIFI_DEBUGFS */
 }

 static int iwl_mvm_power_send_cmd(struct iwl_mvm *mvm,
@@ -525,7 +525,7 @@ static int iwl_mvm_power_send_cmd(struct iwl_mvm *mvm,

	iwl_mvm_power_build_cmd(mvm, vif, &cmd);
	iwl_mvm_power_log(mvm, &cmd);
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	memcpy(&iwl_mvm_vif_from_mac80211(vif)->mac_pwr_cmd, &cmd, sizeof(cmd));
 #endif

@@ -545,7 +545,7 @@ int iwl_mvm_power_update_device(struct iwl_mvm *mvm)
	if (!mvm->ps_disabled)
		cmd.flags |= cpu_to_le16(DEVICE_POWER_FLAGS_POWER_SAVE_ENA_MSK);

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	if (test_bit(IWL_MVM_STATUS_IN_D3, &mvm->status) ?
			mvm->disable_power_off_d3 : mvm->disable_power_off)
		cmd.flags &=
@@ -744,7 +744,7 @@ static void iwl_mvm_power_set_pm(struct iwl_mvm *mvm,
	}
 }

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 int iwl_mvm_power_mac_dbgfs_read(struct iwl_mvm *mvm,
				 struct ieee80211_vif *vif, char *buf,
				 int bufsz)
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/quota.c b/drivers/net/wireless/intel/iwlwifi/mvm/quota.c
index 0811e630a5ee0..97a1c3fbb258e 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/quota.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/quota.c
@@ -73,7 +73,7 @@ struct iwl_mvm_quota_iterator_data {
	int n_interfaces[MAX_BINDINGS];
	int colors[MAX_BINDINGS];
	int low_latency[MAX_BINDINGS];
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	int dbgfs_min[MAX_BINDINGS];
 #endif
	int n_low_latency_bindings;
@@ -132,7 +132,7 @@ static void iwl_mvm_quota_iterator(void *_data, u8 *mac,

	data->n_interfaces[id]++;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	if (mvmvif->dbgfs_quota_min)
		data->dbgfs_min[id] = max(data->dbgfs_min[id],
					  mvmvif->dbgfs_quota_min);
@@ -144,7 +144,7 @@ static void iwl_mvm_quota_iterator(void *_data, u8 *mac,
	}
 }

-#ifdef CPTCFG_IWLMVM_P2P_OPPPS_TEST_WA
+#ifdef CONFIG_IWLMVM_P2P_OPPPS_TEST_WA
 /*
  * Zero quota for P2P client MAC as part of a WA to pass P2P OPPPS certification
  * test. Refer to IWLMVM_P2P_OPPPS_TEST_WA description in Kconfig.noupstream for
@@ -180,7 +180,7 @@ static void iwl_mvm_adjust_quota_for_p2p_wa(struct iwl_mvm *mvm,
 static void iwl_mvm_adjust_quota_for_noa(struct iwl_mvm *mvm,
					 struct iwl_time_quota_cmd *cmd)
 {
-#ifdef CPTCFG_NL80211_TESTMODE
+#ifdef CONFIG_NL80211_TESTMODE
	struct iwl_mvm_vif *mvmvif;
	int i, phy_id = -1, beacon_int = 0;

@@ -312,7 +312,7 @@ int iwl_mvm_update_quotas(struct iwl_mvm *mvm,

		if (data.n_interfaces[i] <= 0)
			qdata->quota = cpu_to_le32(0);
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
		else if (data.dbgfs_min[i])
			qdata->quota =
				cpu_to_le32(data.dbgfs_min[i] * QUOTA_100 / 100);
@@ -371,7 +371,7 @@ int iwl_mvm_update_quotas(struct iwl_mvm *mvm,
			  "zero quota on binding %d\n", i);
	}

-#ifdef CPTCFG_IWLMVM_P2P_OPPPS_TEST_WA
+#ifdef CONFIG_IWLMVM_P2P_OPPPS_TEST_WA
	/*
	 * Zero quota for P2P client MAC as part of a WA to pass P2P OPPPS
	 * certification test. Refer to IWLMVM_P2P_OPPPS_TEST_WA description in
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/rs-fw.c b/drivers/net/wireless/intel/iwlwifi/mvm/rs-fw.c
index 8478b7ac99d84..bc97c58475d70 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/rs-fw.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/rs-fw.c
@@ -418,8 +418,8 @@ void iwl_mvm_tlc_update_notif(struct iwl_mvm *mvm,
	rcu_read_unlock();
 }

-#if defined(CPTCFG_MAC80211_DEBUGFS) && \
-	defined(CPTCFG_IWLWIFI_DEBUG_HOST_CMD_ENABLED)
+#if defined(CONFIG_MAC80211_DEBUGFS) && \
+	defined(CONFIG_IWLWIFI_DEBUG_HOST_CMD_ENABLED)
 int iwl_rs_dhc_set_ampdu_size(struct ieee80211_sta *sta, u32 ampdu_size)
 {
	struct iwl_mvm_sta *mvmsta = iwl_mvm_sta_from_mac80211(sta);
@@ -441,7 +441,7 @@ int iwl_rs_dhc_set_ampdu_size(struct ieee80211_sta *sta, u32 ampdu_size)

	return 0;
 }
-#endif /* CPTCFG_MAC80211_DEBUGFS */
+#endif /* CONFIG_MAC80211_DEBUGFS */

 u16 rs_fw_get_max_amsdu_len(struct ieee80211_sta *sta)
 {
@@ -502,11 +502,11 @@ void rs_fw_rate_init(struct iwl_mvm *mvm, struct ieee80211_sta *sta,

	memset(lq_sta, 0, offsetof(typeof(*lq_sta), pers));

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	iwl_mvm_reset_frame_stats(mvm);
 #endif
	rs_fw_set_supp_rates(sta, sband, &cfg_cmd);
-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	/*
	 * if AP disables mimo on 160bw
	 * (!cfg_cmd.ht_rates[IWL_TLC_NSS_2][IWL_TLC_HT_BW_160])
@@ -531,7 +531,7 @@ void rs_fw_rate_init(struct iwl_mvm *mvm, struct ieee80211_sta *sta,
	if (ret)
		IWL_ERR(mvm, "Failed to send rate scale config (%d)\n", ret);

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (mvm->trans->dbg_cfg.ampdu_limit)
		iwl_rs_dhc_set_ampdu_size(sta,
					  mvm->trans->dbg_cfg.ampdu_limit);
@@ -551,7 +551,7 @@ void iwl_mvm_rs_add_sta(struct iwl_mvm *mvm, struct iwl_mvm_sta *mvmsta)
	lq_sta->pers.last_rssi = S8_MIN;
	lq_sta->last_rate_n_flags = 0;

-#ifdef CPTCFG_MAC80211_DEBUGFS
+#ifdef CONFIG_MAC80211_DEBUGFS
	lq_sta->pers.dbg_fixed_rate = 0;
 #endif
 }
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/rs.c b/drivers/net/wireless/intel/iwlwifi/mvm/rs.c
index 155adade4d638..ed7382e7ea177 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/rs.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/rs.c
@@ -2020,7 +2020,7 @@ static bool rs_tpc_perform(struct iwl_mvm *mvm,
	int weak, strong;
	int weak_tpt = IWL_INVALID_VALUE, strong_tpt = IWL_INVALID_VALUE;

-#ifdef CPTCFG_MAC80211_DEBUGFS
+#ifdef CONFIG_MAC80211_DEBUGFS
	if (lq_sta->pers.dbg_fixed_txp_reduction <= TPC_MAX_REDUCTION) {
		IWL_DEBUG_RATE(mvm, "fixed tpc: %d\n",
			       lq_sta->pers.dbg_fixed_txp_reduction);
@@ -2768,7 +2768,7 @@ static void *rs_drv_alloc_sta(void *mvm_rate, struct ieee80211_sta *sta,
	IWL_DEBUG_RATE(mvm, "create station rate scale window\n");

	lq_sta->pers.drv = mvm;
-#ifdef CPTCFG_MAC80211_DEBUGFS
+#ifdef CONFIG_MAC80211_DEBUGFS
	lq_sta->pers.dbg_fixed_rate = 0;
	lq_sta->pers.dbg_fixed_txp_reduction = TPC_INVALID;
	lq_sta->pers.ss_force = RS_SS_FORCE_NONE;
@@ -2893,7 +2893,7 @@ static void rs_vht_init(struct iwl_mvm *mvm,
	lq_sta->is_vht = true;
 }

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 void iwl_mvm_reset_frame_stats(struct iwl_mvm *mvm)
 {
	spin_lock_bh(&mvm->drv_stats_lock);
@@ -3042,7 +3042,7 @@ static void rs_drv_rate_init(struct iwl_mvm *mvm, struct ieee80211_sta *sta,
	/* as default allow aggregation for all tids */
	lq_sta->tx_agg_tid_en = IWL_AGG_ALL_TID;
	lq_sta->is_agg = 0;
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	iwl_mvm_reset_frame_stats(mvm);
 #endif
	rs_initialize_lq(mvm, sta, lq_sta, band);
@@ -3103,7 +3103,7 @@ static void __iwl_mvm_rs_tx_status(struct iwl_mvm *mvm,
		return;
	}

-#ifdef CPTCFG_MAC80211_DEBUGFS
+#ifdef CONFIG_MAC80211_DEBUGFS
	/* Disable last tx check if we are debugging with fixed rate but
	 * update tx stats
	 */
@@ -3316,7 +3316,7 @@ void iwl_mvm_rs_tx_status(struct iwl_mvm *mvm, struct ieee80211_sta *sta,
	spin_unlock(&mvmsta->lq_sta.rs_drv.pers.lock);
 }

-#ifdef CPTCFG_MAC80211_DEBUGFS
+#ifdef CONFIG_MAC80211_DEBUGFS
 static void rs_build_rates_table_from_fixed(struct iwl_mvm *mvm,
					    struct iwl_lq_cmd *lq_cmd,
					    enum nl80211_band band,
@@ -3352,7 +3352,7 @@ static void rs_build_rates_table_from_fixed(struct iwl_mvm *mvm,
		lq_cmd->agg_frame_cnt_limit =
			LINK_QUAL_AGG_FRAME_LIMIT_GEN2_DEF;
 }
-#endif /* CPTCFG_MAC80211_DEBUGFS */
+#endif /* CONFIG_MAC80211_DEBUGFS */

 static void rs_fill_rates_for_column(struct iwl_mvm *mvm,
				     struct iwl_lq_sta *lq_sta,
@@ -3558,7 +3558,7 @@ static void rs_set_lq_ss_params(struct iwl_mvm *mvm,
	if (!iwl_mvm_bt_coex_is_mimo_allowed(mvm, sta))
		goto out;

-#ifdef CPTCFG_MAC80211_DEBUGFS
+#ifdef CONFIG_MAC80211_DEBUGFS
	/* Check if forcing the decision is configured.
	 * Note that SISO is forced by not allowing STBC or BFER
	 */
@@ -3631,7 +3631,7 @@ static void rs_fill_lq_cmd(struct iwl_mvm *mvm,
	lq_cmd->agg_time_limit =
		cpu_to_le16(IWL_MVM_RS_AGG_TIME_LIMIT);

-#ifdef CPTCFG_MAC80211_DEBUGFS
+#ifdef CONFIG_MAC80211_DEBUGFS
	if (lq_sta->pers.dbg_fixed_rate) {
		rs_build_rates_table_from_fixed(mvm, lq_cmd,
						lq_sta->band,
@@ -3755,7 +3755,7 @@ int rs_pretty_print_rate(char *buf, int bufsz, const u32 rate)
			 (rate & RATE_MCS_BF_MSK) ? "BF " : "");
 }

-#ifdef CPTCFG_MAC80211_DEBUGFS
+#ifdef CONFIG_MAC80211_DEBUGFS
 /**
  * Program the device to use fixed rate for frame transmit
  * This is for debugging/testing only
@@ -4159,7 +4159,7 @@ static const struct rate_control_ops rs_mvm_ops_drv = {
	.alloc_sta = rs_drv_alloc_sta,
	.free_sta = rs_free_sta,
	.rate_update = rs_drv_rate_update,
-#ifdef CPTCFG_MAC80211_DEBUGFS
+#ifdef CONFIG_MAC80211_DEBUGFS
	.add_sta_debugfs = rs_drv_add_sta_debugfs,
 #endif
	.capa = RATE_CTRL_CAPA_VHT_EXT_NSS_BW,
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/rs.h b/drivers/net/wireless/intel/iwlwifi/mvm/rs.h
index b62bb883b9c00..ccbcba4d46f8c 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/rs.h
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/rs.h
@@ -216,7 +216,7 @@ struct iwl_rate_mcs_info {
  * struct iwl_lq_sta_rs_fw - rate and related statistics for RS in FW
  * @last_rate_n_flags: last rate reported by FW
  * @sta_id: the id of the station
-#ifdef CPTCFG_MAC80211_DEBUGFS
+#ifdef CONFIG_MAC80211_DEBUGFS
  * @dbg_fixed_rate: for debug, use fixed rate if not 0
  * @dbg_agg_frame_count_lim: for debug, max number of frames in A-MPDU
 #endif
@@ -233,7 +233,7 @@ struct iwl_lq_sta_rs_fw {
	/* persistent fields - initialized only once - keep last! */
	struct lq_sta_pers_rs_fw {
		u32 sta_id;
-#ifdef CPTCFG_MAC80211_DEBUGFS
+#ifdef CONFIG_MAC80211_DEBUGFS
		u32 dbg_fixed_rate;
		u16 dbg_agg_frame_count_lim;
 #endif
@@ -372,7 +372,7 @@ struct iwl_lq_sta {

	/* persistent fields - initialized only once - keep last! */
	struct lq_sta_pers {
-#ifdef CPTCFG_MAC80211_DEBUGFS
+#ifdef CONFIG_MAC80211_DEBUGFS
		u32 dbg_fixed_rate;
		u8 dbg_fixed_txp_reduction;

@@ -435,7 +435,7 @@ struct iwl_mvm_sta;
 int iwl_mvm_tx_protection(struct iwl_mvm *mvm, struct iwl_mvm_sta *mvmsta,
			  bool enable);

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 void iwl_mvm_reset_frame_stats(struct iwl_mvm *mvm);
 #endif

@@ -456,8 +456,8 @@ static inline int iwl_rs_send_dhc(struct iwl_mvm *mvm,
	return -EINVAL;
 }

-#if defined(CPTCFG_MAC80211_DEBUGFS) && \
-	defined(CPTCFG_IWLWIFI_DEBUG_HOST_CMD_ENABLED)
+#if defined(CONFIG_MAC80211_DEBUGFS) && \
+	defined(CONFIG_IWLWIFI_DEBUG_HOST_CMD_ENABLED)
 int iwl_rs_dhc_set_ampdu_size(struct ieee80211_sta *sta, u32 ampdu_size);
 #else
 static inline int iwl_rs_dhc_set_ampdu_size(struct ieee80211_sta *sta,
@@ -465,5 +465,5 @@ static inline int iwl_rs_dhc_set_ampdu_size(struct ieee80211_sta *sta,
 {
	return -EINVAL;
 }
-#endif /* CPTCFG_MAC80211_DEBUGFS */
+#endif /* CONFIG_MAC80211_DEBUGFS */
 #endif /* __rs__ */
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/rx.c b/drivers/net/wireless/intel/iwlwifi/mvm/rx.c
index 5de88a4e00a41..bb8cdca32a562 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/rx.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/rx.c
@@ -80,7 +80,7 @@ void iwl_mvm_rx_rx_phy_cmd(struct iwl_mvm *mvm, struct iwl_rx_cmd_buffer *rxb)
	memcpy(&mvm->last_phy_info, pkt->data, sizeof(mvm->last_phy_info));
	mvm->ampdu_ref++;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	if (mvm->last_phy_info.phy_flags & cpu_to_le16(RX_RES_PHY_FLAGS_AGG)) {
		spin_lock(&mvm->drv_stats_lock);
		mvm->drv_rx_stats.ampdu_count++;
@@ -480,13 +480,13 @@ void iwl_mvm_rx_rx_mpdu(struct iwl_mvm *mvm, struct napi_struct *napi,
		    ieee80211_is_data(hdr->frame_control))
			iwl_mvm_rx_handle_tcm(mvm, sta, hdr, len, phy_info,
					      rate_n_flags);
-#ifdef CPTCFG_IWLMVM_TDLS_PEER_CACHE
+#ifdef CONFIG_IWLMVM_TDLS_PEER_CACHE
		/*
		 * these packets are from the AP or the existing TDLS peer.
		 * In both cases an existing station.
		 */
		iwl_mvm_tdls_peer_cache_pkt(mvm, hdr, len, 0);
-#endif /* CPTCFG_IWLMVM_TDLS_PEER_CACHE */
+#endif /* CONFIG_IWLMVM_TDLS_PEER_CACHE */

		if (ieee80211_is_data(hdr->frame_control))
			iwl_mvm_rx_csum(sta, skb, rx_pkt_status);
@@ -558,7 +558,7 @@ void iwl_mvm_rx_rx_mpdu(struct iwl_mvm *mvm, struct napi_struct *napi,
		rx_status->rate_idx = rate;
	}

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	iwl_mvm_update_frame_stats(mvm, rate_n_flags,
				   rx_status->flag & RX_FLAG_AMPDU_DETAILS);
 #endif
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/rxmq.c b/drivers/net/wireless/intel/iwlwifi/mvm/rxmq.c
index fdaf94e289ea7..81530a2b58a68 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/rxmq.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/rxmq.c
@@ -1927,13 +1927,13 @@ void iwl_mvm_rx_mpdu_mq(struct iwl_mvm *mvm, struct napi_struct *napi,
		if (ieee80211_is_data(hdr->frame_control))
			iwl_mvm_rx_csum(mvm, sta, skb, pkt);

-#ifdef CPTCFG_IWLMVM_TDLS_PEER_CACHE
+#ifdef CONFIG_IWLMVM_TDLS_PEER_CACHE
		/*
		 * these packets are from the AP or the existing TDLS peer.
		 * In both cases an existing station.
		 */
		iwl_mvm_tdls_peer_cache_pkt(mvm, hdr, len, queue);
-#endif /* CPTCFG_IWLMVM_TDLS_PEER_CACHE */
+#endif /* CONFIG_IWLMVM_TDLS_PEER_CACHE */

		if (iwl_mvm_is_dup(sta, queue, rx_status, hdr, desc)) {
			kfree_skb(skb);
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/scan.c b/drivers/net/wireless/intel/iwlwifi/mvm/scan.c
index 9ac10051190c8..2a6f85218addc 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/scan.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/scan.c
@@ -943,7 +943,7 @@ static int iwl_mvm_scan_lmac_flags(struct iwl_mvm *mvm,
	else
		flags |= IWL_MVM_LMAC_SCAN_FLAG_MATCH;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	if (mvm->scan_iter_notif_enabled)
		flags |= IWL_MVM_LMAC_SCAN_FLAG_ITER_COMPLETE;
 #endif
@@ -1738,7 +1738,7 @@ static u16 iwl_mvm_scan_umac_flags_v2(struct iwl_mvm *mvm,
	    mvm->sched_scan_pass_all == SCHED_SCAN_PASS_ALL_ENABLED)
		flags |= IWL_UMAC_SCAN_GEN_FLAGS_V2_NTFY_ITER_COMPLETE;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	if (mvm->scan_iter_notif_enabled)
		flags |= IWL_UMAC_SCAN_GEN_FLAGS_V2_NTFY_ITER_COMPLETE;
 #endif
@@ -1787,7 +1787,7 @@ static u16 iwl_mvm_scan_umac_flags(struct iwl_mvm *mvm,
	if (params->iter_notif)
		flags |= IWL_UMAC_SCAN_GEN_FLAGS_ITER_COMPLETE;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	if (mvm->scan_iter_notif_enabled)
		flags |= IWL_UMAC_SCAN_GEN_FLAGS_ITER_COMPLETE;
 #endif
@@ -2162,7 +2162,7 @@ static int iwl_mvm_check_running_scans(struct iwl_mvm *mvm, int type)
	return -EIO;
 }

-#define SCAN_TIMEOUT (CPTCFG_IWL_TIMEOUT_FACTOR * 20000)
+#define SCAN_TIMEOUT (CONFIG_IWL_TIMEOUT_FACTOR * 20000)

 void iwl_mvm_scan_timeout_wk(struct work_struct *work)
 {
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/tdls.c b/drivers/net/wireless/intel/iwlwifi/mvm/tdls.c
index 376f76f4ad2dd..7694981c6c1bb 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/tdls.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/tdls.c
@@ -728,7 +728,7 @@ iwl_mvm_tdls_recv_channel_switch(struct ieee80211_hw *hw,
	mutex_unlock(&mvm->mutex);
 }

-#ifdef CPTCFG_IWLMVM_TDLS_PEER_CACHE
+#ifdef CONFIG_IWLMVM_TDLS_PEER_CACHE
 void iwl_mvm_tdls_peer_cache_pkt(struct iwl_mvm *mvm, struct ieee80211_hdr *hdr,
				 u32 len, int rxq)
 {
@@ -799,4 +799,4 @@ iwl_mvm_tdls_peer_cache_find(struct iwl_mvm *mvm, const u8 *addr)

	return cnt;
 }
-#endif /* CPTCFG_IWLMVM_TDLS_PEER_CACHE */
+#endif /* CONFIG_IWLMVM_TDLS_PEER_CACHE */
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/tx.c b/drivers/net/wireless/intel/iwlwifi/mvm/tx.c
index 9a7d3933d2042..ed685b9622d38 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/tx.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/tx.c
@@ -347,7 +347,7 @@ static u32 iwl_mvm_get_tx_rate(struct iwl_mvm *mvm,
	 */
	if (info->band != NL80211_BAND_2GHZ)
		rate_idx += IWL_FIRST_OFDM_RATE;
-#ifdef CPTCFG_IWLWIFI_FORCE_OFDM_RATE
+#ifdef CONFIG_IWLWIFI_FORCE_OFDM_RATE
	/* Force OFDM on each TX packet */
	rate_idx = IWL_FIRST_OFDM_RATE;
 #endif
@@ -399,7 +399,7 @@ void iwl_mvm_set_tx_cmd_rate(struct iwl_mvm *mvm, struct iwl_tx_cmd *tx_cmd,
	 * table is controlled by LINK_QUALITY commands
	 */

-#ifndef CPTCFG_IWLWIFI_FORCE_OFDM_RATE
+#ifndef CONFIG_IWLWIFI_FORCE_OFDM_RATE
	if (ieee80211_is_data(fc) && sta) {
		struct iwl_mvm_sta *mvmsta = iwl_mvm_sta_from_mac80211(sta);

@@ -1301,7 +1301,7 @@ static void iwl_mvm_check_ratid_empty(struct iwl_mvm *mvm,
	}
 }

-#ifdef CPTCFG_IWLWIFI_DEBUG
+#ifdef CONFIG_IWLWIFI_DEBUG
 const char *iwl_mvm_get_tx_fail_reason(u32 status)
 {
 #define TX_STATUS_FAIL(x) case TX_STATUS_FAIL_ ## x: return #x
@@ -1339,7 +1339,7 @@ const char *iwl_mvm_get_tx_fail_reason(u32 status)
 #undef TX_STATUS_FAIL
 #undef TX_STATUS_POSTPONE
 }
-#endif /* CPTCFG_IWLWIFI_DEBUG */
+#endif /* CONFIG_IWLWIFI_DEBUG */

 void iwl_mvm_hwrate_to_tx_rate(u32 rate_n_flags,
			       enum nl80211_band band,
@@ -1561,11 +1561,11 @@ static void iwl_mvm_rx_tx_cmd_single(struct iwl_mvm *mvm,
		info->status.status_driver_data[0] =
			RS_DRV_DATA_PACK(lq_color, tx_resp->reduced_tpc);

-#ifdef CPTCFG_IWLMVM_TDLS_PEER_CACHE
+#ifdef CONFIG_IWLMVM_TDLS_PEER_CACHE
		if (info->flags & IEEE80211_TX_STAT_ACK)
			iwl_mvm_tdls_peer_cache_pkt(mvm, (void *)skb->data,
						    skb->len, -1);
-#endif /* CPTCFG_IWLMVM_TDLS_PEER_CACHE */
+#endif /* CONFIG_IWLMVM_TDLS_PEER_CACHE */

		ieee80211_tx_status(mvm->hw, skb);
	}
@@ -1675,7 +1675,7 @@ static void iwl_mvm_rx_tx_cmd_single(struct iwl_mvm *mvm,
	rcu_read_unlock();
 }

-#ifdef CPTCFG_IWLWIFI_DEBUG
+#ifdef CONFIG_IWLWIFI_DEBUG
 #define AGG_TX_STATE_(x) case AGG_TX_STATE_ ## x: return #x
 static const char *iwl_get_agg_tx_status(u16 status)
 {
@@ -1722,7 +1722,7 @@ static void iwl_mvm_rx_tx_cmd_agg_dbg(struct iwl_mvm *mvm,
 static void iwl_mvm_rx_tx_cmd_agg_dbg(struct iwl_mvm *mvm,
				      struct iwl_rx_packet *pkt)
 {}
-#endif /* CPTCFG_IWLWIFI_DEBUG */
+#endif /* CONFIG_IWLWIFI_DEBUG */

 static void iwl_mvm_rx_tx_cmd_agg(struct iwl_mvm *mvm,
				  struct iwl_rx_packet *pkt)
@@ -1869,9 +1869,9 @@ static void iwl_mvm_tx_reclaim(struct iwl_mvm *mvm, int sta_id, int tid,
		else
			WARN_ON_ONCE(tid != IWL_MAX_TID_COUNT);

-#ifdef CPTCFG_IWLMVM_TDLS_PEER_CACHE
+#ifdef CONFIG_IWLMVM_TDLS_PEER_CACHE
		iwl_mvm_tdls_peer_cache_pkt(mvm, hdr, skb->len, -1);
-#endif /* CPTCFG_IWLMVM_TDLS_PEER_CACHE */
+#endif /* CONFIG_IWLMVM_TDLS_PEER_CACHE */

		/* this is the first skb we deliver in this batch */
		/* put the rate scaling data there */
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/utils.c b/drivers/net/wireless/intel/iwlwifi/mvm/utils.c
index 53fcc72a00668..9f47c9125fc84 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/utils.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/utils.c
@@ -77,7 +77,7 @@ int iwl_mvm_send_cmd(struct iwl_mvm *mvm, struct iwl_host_cmd *cmd)
 {
	int ret;

-#if defined(CPTCFG_IWLWIFI_DEBUGFS) && defined(CONFIG_PM_SLEEP)
+#if defined(CONFIG_IWLWIFI_DEBUGFS) && defined(CONFIG_PM_SLEEP)
	if (WARN_ON(mvm->d3_test_active))
		return -EIO;
 #endif
@@ -134,7 +134,7 @@ int iwl_mvm_send_cmd_status(struct iwl_mvm *mvm, struct iwl_host_cmd *cmd,

	lockdep_assert_held(&mvm->mutex);

-#if defined(CPTCFG_IWLWIFI_DEBUGFS) && defined(CONFIG_PM_SLEEP)
+#if defined(CONFIG_IWLWIFI_DEBUGFS) && defined(CONFIG_PM_SLEEP)
	if (WARN_ON(mvm->d3_test_active))
		return -EIO;
 #endif
@@ -803,7 +803,7 @@ int iwl_mvm_update_low_latency(struct iwl_mvm *mvm, struct ieee80211_vif *vif,

	iwl_mvm_bt_coex_vif_change(mvm);

-#ifdef CPTCFG_IWLMVM_VENDOR_TCM_EVENTS
+#ifdef CONFIG_IWLMVM_VENDOR_TCM_EVENTS
	iwl_mvm_send_tcm_event(mvm, vif);
 #endif

@@ -1070,7 +1070,7 @@ static void iwl_mvm_tcm_iter(void *_data, u8 *mac, struct ieee80211_vif *vif)
		iwl_mvm_update_low_latency(mvm, vif, low_latency,
					   LOW_LATENCY_TRAFFIC);
	} else {
-#ifdef CPTCFG_IWLMVM_VENDOR_TCM_EVENTS
+#ifdef CONFIG_IWLMVM_VENDOR_TCM_EVENTS
		iwl_mvm_send_tcm_event(mvm, vif);
 #endif
		iwl_mvm_update_quotas(mvm, false, NULL);
@@ -1092,7 +1092,7 @@ static void iwl_mvm_tcm_results(struct iwl_mvm *mvm)
		mvm->hw, IEEE80211_IFACE_ITER_NORMAL,
		iwl_mvm_tcm_iter, &data);

-#ifdef CPTCFG_IWLMVM_VENDOR_TCM_EVENTS
+#ifdef CONFIG_IWLMVM_VENDOR_TCM_EVENTS
	/* send global only */
	if (mvm->tcm.result.global_change && !data.any_sent)
		iwl_mvm_send_tcm_event(mvm, NULL);
@@ -1456,7 +1456,7 @@ void iwl_mvm_get_sync_time(struct iwl_mvm *mvm, u32 *gp2, u64 *boottime)
	}
 }

-#ifdef CPTCFG_IWLMVM_VENDOR_CMDS
+#ifdef CONFIG_IWLMVM_VENDOR_CMDS
 int iwl_mvm_send_csi_cmd(struct iwl_mvm *mvm)
 {
	/*
@@ -1492,4 +1492,4 @@ int iwl_mvm_send_csi_cmd(struct iwl_mvm *mvm)

	return iwl_mvm_send_cmd_pdu(mvm, id, 0, size, &cfg);
 }
-#endif /* CPTCFG_IWLMVM_VENDOR_CMDS */
+#endif /* CONFIG_IWLMVM_VENDOR_CMDS */
diff --git a/drivers/net/wireless/intel/iwlwifi/mvm/vendor-cmd.c b/drivers/net/wireless/intel/iwlwifi/mvm/vendor-cmd.c
index e6f2025c7e8be..5ca319ecba809 100644
--- a/drivers/net/wireless/intel/iwlwifi/mvm/vendor-cmd.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/vendor-cmd.c
@@ -266,7 +266,7 @@ static int iwl_mvm_set_country(struct wiphy *wiphy,
	return retval;
 }

-#ifdef CPTCFG_IWLMVM_TDLS_PEER_CACHE
+#ifdef CONFIG_IWLMVM_TDLS_PEER_CACHE
 static int iwl_vendor_tdls_peer_cache_add(struct wiphy *wiphy,
					  struct wireless_dev *wdev,
					  const void *data, int data_len)
@@ -433,7 +433,7 @@ static int iwl_vendor_tdls_peer_cache_query(struct wiphy *wiphy,

	return cfg80211_vendor_cmd_reply(skb);
 }
-#endif /* CPTCFG_IWLMVM_TDLS_PEER_CACHE */
+#endif /* CONFIG_IWLMVM_TDLS_PEER_CACHE */

 static int iwl_vendor_set_nic_txpower_limit(struct wiphy *wiphy,
					    struct wireless_dev *wdev,
@@ -514,7 +514,7 @@ static int iwl_vendor_set_nic_txpower_limit(struct wiphy *wiphy,
	return err;
 }

-#ifdef CPTCFG_IWLMVM_P2P_OPPPS_TEST_WA
+#ifdef CONFIG_IWLMVM_P2P_OPPPS_TEST_WA
 static int iwl_mvm_oppps_wa_update_quota(struct iwl_mvm *mvm,
					 struct ieee80211_vif *vif,
					 bool enable)
@@ -1290,7 +1290,7 @@ static const struct wiphy_vendor_command iwl_mvm_vendor_commands[] = {
		.policy = iwl_mvm_vendor_attr_policy,
		.maxattr = MAX_IWL_MVM_VENDOR_ATTR,
	},
-#ifdef CPTCFG_IWLMVM_TDLS_PEER_CACHE
+#ifdef CONFIG_IWLMVM_TDLS_PEER_CACHE
	{
		.info = {
			.vendor_id = INTEL_OUI,
@@ -1324,7 +1324,7 @@ static const struct wiphy_vendor_command iwl_mvm_vendor_commands[] = {
		.policy = iwl_mvm_vendor_attr_policy,
		.maxattr = MAX_IWL_MVM_VENDOR_ATTR,
	},
-#endif /* CPTCFG_IWLMVM_TDLS_PEER_CACHE */
+#endif /* CONFIG_IWLMVM_TDLS_PEER_CACHE */
	{
		.info = {
			.vendor_id = INTEL_OUI,
@@ -1336,7 +1336,7 @@ static const struct wiphy_vendor_command iwl_mvm_vendor_commands[] = {
		.policy = iwl_mvm_vendor_attr_policy,
		.maxattr = MAX_IWL_MVM_VENDOR_ATTR,
	},
-#ifdef CPTCFG_IWLMVM_P2P_OPPPS_TEST_WA
+#ifdef CONFIG_IWLMVM_P2P_OPPPS_TEST_WA
	{
		.info = {
			.vendor_id = INTEL_OUI,
diff --git a/drivers/net/wireless/intel/iwlwifi/pcie/drv.c b/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
index 891fb87f412e3..3470e9fefeead 100644
--- a/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/drv.c
@@ -81,7 +81,7 @@
 /* Hardware specific file defines the PCI IDs table for that hardware module */
 static const struct pci_device_id iwl_hw_card_ids[] = {

-#if IS_ENABLED(CPTCFG_IWLMVM)
+#if IS_ENABLED(CONFIG_IWLMVM)
 /* 7260 Series */
	{IWL_PCI_DEVICE(0x08B1, 0x4070, iwl7260_2ac_cfg)},
	{IWL_PCI_DEVICE(0x08B1, 0x4072, iwl7260_2ac_cfg)},
@@ -321,9 +321,9 @@ static const struct pci_device_id iwl_hw_card_ids[] = {
	{IWL_PCI_DEVICE(0x24FD, 0x0012, iwl8275_2ac_cfg)},
	{IWL_PCI_DEVICE(0x24FD, 0x0014, iwl8265_2ac_cfg)},
	{IWL_PCI_DEVICE(0x24FD, 0x9074, iwl8265_2ac_cfg)},
-#endif /* IS_ENABLED(CPTCFG_IWLMVM) */
+#endif /* IS_ENABLED(CONFIG_IWLMVM) */

-#if IS_ENABLED(CPTCFG_IWLMVM) || IS_ENABLED(CPTCFG_IWLFMAC)
+#if IS_ENABLED(CONFIG_IWLMVM) || IS_ENABLED(CONFIG_IWLFMAC)
 /* 9000 Series */
	{IWL_PCI_DEVICE(0x2526, PCI_ANY_ID, iwl9000_trans_cfg)},
	{IWL_PCI_DEVICE(0x271B, PCI_ANY_ID, iwl9000_trans_cfg)},
@@ -384,7 +384,7 @@ static const struct pci_device_id iwl_hw_card_ids[] = {
	{IWL_PCI_DEVICE(0x2729, PCI_ANY_ID, iwl_ma_trans_cfg)},
	{IWL_PCI_DEVICE(0x7E80, PCI_ANY_ID, iwl_ma_trans_cfg)},

-#endif /* CPTCFG_IWLMVM || CPTCFG_IWLFMAC */
+#endif /* CONFIG_IWLMVM || CONFIG_IWLFMAC */

	{0}
 };
@@ -403,7 +403,7 @@ MODULE_DEVICE_TABLE(pci, iwl_hw_card_ids);
		      _cfg, _name)

 static const struct iwl_dev_info iwl_dev_info_table[] = {
-#if IS_ENABLED(CPTCFG_IWLMVM) || IS_ENABLED(CPTCFG_IWLFMAC)
+#if IS_ENABLED(CONFIG_IWLMVM) || IS_ENABLED(CONFIG_IWLFMAC)
 /* 9000 */
	IWL_DEV_INFO(0x2526, 0x1550, iwl9260_2ac_cfg, iwl9260_killer_1550_name),
	IWL_DEV_INFO(0x2526, 0x1551, iwl9560_2ac_cfg_soc, iwl9560_killer_1550s_name),
@@ -804,7 +804,7 @@ static const struct iwl_dev_info iwl_dev_info_table[] = {
		      IWL_CFG_ANY, IWL_CFG_ANY,
		      iwl_cfg_ma_a0_mr_a0, iwl_ma_name),

-#endif /* CPTCFG_IWLMVM || CPTCFG_IWLFMAC */
+#endif /* CONFIG_IWLMVM || CONFIG_IWLFMAC */
 };

 /* PCI registers */
@@ -866,7 +866,7 @@ static int iwl_pci_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
		}
	}

-#if IS_ENABLED(CPTCFG_IWLMVM)
+#if IS_ENABLED(CONFIG_IWLMVM)
	/*
	 * special-case 7265D, it has the same PCI IDs.
	 *
@@ -885,7 +885,7 @@ static int iwl_pci_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
		iwl_trans->cfg = cfg_7265d;
 #endif

-#if IS_ENABLED(CPTCFG_IWLMVM) || IS_ENABLED(CPTCFG_IWLFMAC)
+#if IS_ENABLED(CONFIG_IWLMVM) || IS_ENABLED(CONFIG_IWLFMAC)
	if (cfg == &iwlax210_2ax_cfg_so_hr_a0) {
		if (iwl_trans->hw_rev == CSR_HW_REV_TYPE_TY) {
			iwl_trans->cfg = &iwlax210_2ax_cfg_ty_gf_a0;
diff --git a/drivers/net/wireless/intel/iwlwifi/pcie/internal.h b/drivers/net/wireless/intel/iwlwifi/pcie/internal.h
index ab844e2434702..b9b513d60a93b 100644
--- a/drivers/net/wireless/intel/iwlwifi/pcie/internal.h
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/internal.h
@@ -259,7 +259,7 @@ static inline __le16 iwl_get_closed_rb_stts(struct iwl_trans *trans,
	}
 }

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 /**
  * enum iwl_fw_mon_dbgfs_state - the different states of the monitor_data
  * debugfs file
@@ -308,7 +308,7 @@ enum iwl_image_response_code {
  *	in &iwl_fw_mon_dbgfs_state enum
  * @mutex: locked while reading from monitor_data debugfs file
  */
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 struct cont_rec {
	u32 prev_wr_ptr;
	u32 prev_wrap_cnt;
@@ -353,7 +353,7 @@ struct cont_rec {
  * @reg_lock: protect hw register access
  * @mutex: to protect stop_device / start_fw / start_hw
  * @cmd_in_flight: true when we have a host command in flight
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
  * @fw_mon_data: fw continuous recording data
 #endif
  * @msix_entries: array of MSI-X entries
@@ -444,7 +444,7 @@ struct iwl_trans_pcie {
	spinlock_t reg_lock;
	bool cmd_hold_nic_awake;

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	struct cont_rec fw_mon_data;
 #endif

@@ -780,7 +780,7 @@ static inline bool iwl_is_rfkill_set(struct iwl_trans *trans)
	if (trans_pcie->debug_rfkill == 1)
		return true;

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	if (trans_pcie->debug_rfkill == -1 &&
	    trans->dbg_cfg.STARTUP_RFKILL)
		return true;
@@ -795,7 +795,7 @@ static inline void __iwl_trans_pcie_set_bits_mask(struct iwl_trans *trans,
 {
	u32 v;

-#ifdef CPTCFG_IWLWIFI_DEBUG
+#ifdef CONFIG_IWLWIFI_DEBUG
	WARN_ON_ONCE(value & ~mask);
 #endif

@@ -826,7 +826,7 @@ void iwl_trans_pcie_rf_kill(struct iwl_trans *trans, bool state);
 void iwl_trans_pcie_dump_regs(struct iwl_trans *trans);
 void iwl_trans_pcie_sync_nmi(struct iwl_trans *trans);

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 void iwl_trans_pcie_dbgfs_register(struct iwl_trans *trans);
 #else
 static inline void iwl_trans_pcie_dbgfs_register(struct iwl_trans *trans) { }
diff --git a/drivers/net/wireless/intel/iwlwifi/pcie/trans.c b/drivers/net/wireless/intel/iwlwifi/pcie/trans.c
index 72c8de1b29fda..34a1be69e2d5e 100644
--- a/drivers/net/wireless/intel/iwlwifi/pcie/trans.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/trans.c
@@ -82,7 +82,7 @@
 #include "internal.h"
 #include "iwl-fh.h"
 #include "iwl-context-info-gen3.h"
-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
 #include "iwl-dnt-cfg.h"
 #endif

@@ -774,7 +774,7 @@ static int iwl_pcie_load_section(struct iwl_trans *trans, u8 section_num,
	return ret;
 }

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
 static void iwl_pcie_override_secure_boot_cfg(struct iwl_trans *trans)
 {
	u32 val;
@@ -1057,7 +1057,7 @@ static int iwl_pcie_load_given_ucode(struct iwl_trans *trans,
	if (iwl_pcie_dbg_on(trans))
		iwl_pcie_apply_destination(trans);

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	iwl_dnt_configure(trans, image);
 #endif

@@ -1081,11 +1081,11 @@ static int iwl_pcie_load_given_ucode_8000(struct iwl_trans *trans,
	if (iwl_pcie_dbg_on(trans))
		iwl_pcie_apply_destination(trans);

-#ifdef CPTCFG_IWLWIFI_DEVICE_TESTMODE
+#ifdef CONFIG_IWLWIFI_DEVICE_TESTMODE
	iwl_dnt_configure(trans, image);
 #endif

-#ifdef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifdef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
	iwl_pcie_override_secure_boot_cfg(trans);
 #endif

@@ -2468,7 +2468,7 @@ void iwl_pcie_dump_csr(struct iwl_trans *trans)
	}
 }

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 /* create and remove of files */
 #define DEBUGFS_ADD_FILE(name, parent, mode) do {			\
	debugfs_create_file(#name, mode, parent, trans,			\
@@ -2668,7 +2668,7 @@ static ssize_t iwl_dbgfs_interrupt_read(struct file *file,
			"\tLast Restarting Code:  0x%X\n",
			isr_stats->err_code);
	}
-#ifdef CPTCFG_IWLWIFI_DEBUG
+#ifdef CONFIG_IWLWIFI_DEBUG
	pos += scnprintf(buf + pos, bufsz - pos, "Frame transmitted:\t\t %u\n",
		isr_stats->sch);
	pos += scnprintf(buf + pos, bufsz - pos, "Alive interrupt:\t\t %u\n",
@@ -2957,7 +2957,7 @@ static void iwl_trans_pcie_debugfs_cleanup(struct iwl_trans *trans)
	data->state = IWL_FW_MON_DBGFS_STATE_DISABLED;
	mutex_unlock(&data->mutex);
 }
-#endif /*CPTCFG_IWLWIFI_DEBUGFS */
+#endif /*CONFIG_IWLWIFI_DEBUGFS */

 static u32 iwl_trans_pcie_get_cmdlen(struct iwl_trans *trans, void *tfd)
 {
@@ -3440,7 +3440,7 @@ static const struct iwl_trans_ops trans_ops_pcie = {

	.freeze_txq_timer = iwl_trans_txq_freeze_timer,
	.block_txq_ptrs = iwl_trans_pcie_block_txq_ptrs,
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	.debugfs_cleanup = iwl_trans_pcie_debugfs_cleanup,
 #endif
 };
@@ -3465,7 +3465,7 @@ static const struct iwl_trans_ops trans_ops_pcie_gen2 = {
	.wait_txq_empty = iwl_trans_pcie_wait_txq_empty,
	.rxq_dma_data = iwl_trans_pcie_rxq_dma_data,
	.set_pnvm = iwl_trans_pcie_ctx_info_gen3_set_pnvm,
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	.debugfs_cleanup = iwl_trans_pcie_debugfs_cleanup,
 #endif
 };
@@ -3612,7 +3612,7 @@ struct iwl_trans *iwl_trans_pcie_alloc(struct pci_dev *pdev,
		}
	 }

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	trans_pcie->fw_mon_data.state = IWL_FW_MON_DBGFS_STATE_CLOSED;
	mutex_init(&trans_pcie->fw_mon_data.mutex);
 #endif
diff --git a/drivers/net/wireless/intel/iwlwifi/pcie/tx-gen2.c b/drivers/net/wireless/intel/iwlwifi/pcie/tx-gen2.c
index 7e63701ba9d6c..f4ae5b0cb82c4 100644
--- a/drivers/net/wireless/intel/iwlwifi/pcie/tx-gen2.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/tx-gen2.c
@@ -305,7 +305,7 @@ static int iwl_pcie_gen2_enqueue_hcmd(struct iwl_trans *trans,
	return idx;
 }

-#define HOST_COMPLETE_TIMEOUT	(2 * HZ * CPTCFG_IWL_TIMEOUT_FACTOR)
+#define HOST_COMPLETE_TIMEOUT	(2 * HZ * CONFIG_IWL_TIMEOUT_FACTOR)

 static int iwl_pcie_gen2_send_hcmd_sync(struct iwl_trans *trans,
					struct iwl_host_cmd *cmd)
diff --git a/drivers/net/wireless/intel/iwlwifi/pcie/tx.c b/drivers/net/wireless/intel/iwlwifi/pcie/tx.c
index 5e0214395c739..5d4e6fde91072 100644
--- a/drivers/net/wireless/intel/iwlwifi/pcie/tx.c
+++ b/drivers/net/wireless/intel/iwlwifi/pcie/tx.c
@@ -1304,7 +1304,7 @@ void iwl_pcie_hcmd_complete(struct iwl_trans *trans,
	spin_unlock_bh(&txq->lock);
 }

-#define HOST_COMPLETE_TIMEOUT	(2 * HZ * CPTCFG_IWL_TIMEOUT_FACTOR)
+#define HOST_COMPLETE_TIMEOUT	(2 * HZ * CONFIG_IWL_TIMEOUT_FACTOR)

 static int iwl_pcie_send_hcmd_async(struct iwl_trans *trans,
				    struct iwl_host_cmd *cmd)
diff --git a/drivers/net/wireless/intel/iwlwifi/xvt/Makefile b/drivers/net/wireless/intel/iwlwifi/xvt/Makefile
index 2153793682726..44a521747833a 100644
--- a/drivers/net/wireless/intel/iwlwifi/xvt/Makefile
+++ b/drivers/net/wireless/intel/iwlwifi/xvt/Makefile
@@ -1,5 +1,5 @@
-obj-$(CPTCFG_IWLXVT)   += iwlxvt.o
+obj-$(CONFIG_IWLXVT)   += iwlxvt.o
 iwlxvt-y += xvt.o user-infc.o utils.o fw.o nvm.o rx.o
-iwlxvt-$(CPTCFG_IWLWIFI_DEBUGFS) += debugfs.o
+iwlxvt-$(CONFIG_IWLWIFI_DEBUGFS) += debugfs.o

 ccflags-y += -D__CHECK_ENDIAN__ -I$(src)/../
diff --git a/drivers/net/wireless/intel/iwlwifi/xvt/constants.h b/drivers/net/wireless/intel/iwlwifi/xvt/constants.h
index e9d6d1325b935..e0f51f060e91c 100644
--- a/drivers/net/wireless/intel/iwlwifi/xvt/constants.h
+++ b/drivers/net/wireless/intel/iwlwifi/xvt/constants.h
@@ -60,16 +60,16 @@
 #ifndef __XVT_CONSTANTS_H
 #define __XVT_CONSTANTS_H

-#ifndef CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
+#ifndef CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES
 #define IWL_XVT_DEFAULT_DBGM_MEM_POWER	0
 #define IWL_XVT_DEFAULT_DBGM_LMAC_MASK	0
 #define IWL_XVT_DEFAULT_DBGM_PRPH_MASK	0

-#else /* CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES */
+#else /* CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES */
 #define IWL_XVT_DEFAULT_DBGM_MEM_POWER	(xvt->trans->dbg_cfg.XVT_DEFAULT_DBGM_MEM_POWER)
 #define IWL_XVT_DEFAULT_DBGM_LMAC_MASK	(xvt->trans->dbg_cfg.XVT_DEFAULT_DBGM_LMAC_MASK)
 #define IWL_XVT_DEFAULT_DBGM_PRPH_MASK	(xvt->trans->dbg_cfg.XVT_DEFAULT_DBGM_PRPH_MASK)

-#endif /* CPTCFG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES */
+#endif /* CONFIG_IWLWIFI_SUPPORT_DEBUG_OVERRIDES */

 #endif /* __XVT_CONSTANTS_H */
diff --git a/drivers/net/wireless/intel/iwlwifi/xvt/debugfs.c b/drivers/net/wireless/intel/iwlwifi/xvt/debugfs.c
index 16f0b4d96d154..7383dd59060af 100644
--- a/drivers/net/wireless/intel/iwlwifi/xvt/debugfs.c
+++ b/drivers/net/wireless/intel/iwlwifi/xvt/debugfs.c
@@ -162,7 +162,7 @@ XVT_DEBUGFS_WRITE_FILE_OPS(fw_restart, 10);
 XVT_DEBUGFS_WRITE_FILE_OPS(fw_nmi, 10);
 XVT_DEBUGFS_WRITE_FILE_OPS(set_profile, 10);

-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 int iwl_xvt_dbgfs_register(struct iwl_xvt *xvt, struct dentry *dbgfs_dir)
 {
	xvt->debugfs_dir = dbgfs_dir;
@@ -177,4 +177,4 @@ int iwl_xvt_dbgfs_register(struct iwl_xvt *xvt, struct dentry *dbgfs_dir)
	IWL_ERR(xvt, "Can't create the xvt debugfs directory\n");
	return -ENOMEM;
 }
-#endif /* CPTCFG_IWLWIFI_DEBUGFS */
+#endif /* CONFIG_IWLWIFI_DEBUGFS */
diff --git a/drivers/net/wireless/intel/iwlwifi/xvt/fw.c b/drivers/net/wireless/intel/iwlwifi/xvt/fw.c
index e785a16d65dfb..0ee684c59e94b 100644
--- a/drivers/net/wireless/intel/iwlwifi/xvt/fw.c
+++ b/drivers/net/wireless/intel/iwlwifi/xvt/fw.c
@@ -69,7 +69,7 @@
 #include "fw/api/power.h"
 #include "fw/pnvm.h"

-#define XVT_UCODE_ALIVE_TIMEOUT	(HZ * CPTCFG_IWL_TIMEOUT_FACTOR)
+#define XVT_UCODE_ALIVE_TIMEOUT	(HZ * CONFIG_IWL_TIMEOUT_FACTOR)

 struct iwl_xvt_alive_data {
	bool valid;
@@ -310,7 +310,7 @@ static int iwl_xvt_load_ucode_wait_alive(struct iwl_xvt *xvt,
	}

	xvt->fw_running = true;
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
	iwl_fw_set_dbg_rec_on(&xvt->fwrt);
 #endif

diff --git a/drivers/net/wireless/intel/iwlwifi/xvt/user-infc.c b/drivers/net/wireless/intel/iwlwifi/xvt/user-infc.c
index af8b29e039f45..0e14f7510082f 100644
--- a/drivers/net/wireless/intel/iwlwifi/xvt/user-infc.c
+++ b/drivers/net/wireless/intel/iwlwifi/xvt/user-infc.c
@@ -85,7 +85,7 @@
 #include "fw/acpi.h"
 #include "fw/img.h"

-#define XVT_UCODE_CALIB_TIMEOUT (CPTCFG_IWL_TIMEOUT_FACTOR * HZ)
+#define XVT_UCODE_CALIB_TIMEOUT (CONFIG_IWL_TIMEOUT_FACTOR * HZ)
 #define XVT_SCU_BASE	(0xe6a00000)
 #define XVT_SCU_SNUM1	(XVT_SCU_BASE + 0x300)
 #define XVT_SCU_SNUM2	(XVT_SCU_SNUM1 + 0x4)
@@ -443,7 +443,7 @@ static int iwl_xvt_send_phy_cfg_cmd(struct iwl_xvt *xvt, u32 ucode_type)
		       calib_cmd_cfg->phy_cfg);

	/* ESL workaround - calibration is not allowed */
-	if (CPTCFG_IWL_TIMEOUT_FACTOR > 20) {
+	if (CONFIG_IWL_TIMEOUT_FACTOR > 20) {
		calib_cmd_cfg->calib_control.event_trigger = 0;
		calib_cmd_cfg->calib_control.flow_trigger = 0;
	}
@@ -1375,7 +1375,7 @@ static int iwl_xvt_start_tx_handler(void *data)
	if (sent_packets > 0 && !xvt->fw_error) {
		time_remain = wait_event_interruptible_timeout(xvt->tx_done_wq,
					xvt->num_of_tx_resp == sent_packets,
-					5 * HZ * CPTCFG_IWL_TIMEOUT_FACTOR);
+					5 * HZ * CONFIG_IWL_TIMEOUT_FACTOR);
		if (time_remain <= 0) {
			IWL_ERR(xvt, "Not all Tx messages were sent\n");
			if (status == 0)
diff --git a/drivers/net/wireless/intel/iwlwifi/xvt/xvt.h b/drivers/net/wireless/intel/iwlwifi/xvt/xvt.h
index 503cfcac1e97b..7910148d5bbc3 100644
--- a/drivers/net/wireless/intel/iwlwifi/xvt/xvt.h
+++ b/drivers/net/wireless/intel/iwlwifi/xvt/xvt.h
@@ -503,7 +503,7 @@ int iwl_xvt_allocate_tx_queue(struct iwl_xvt *xvt, u8 sta_id,
 void iwl_xvt_txq_disable(struct iwl_xvt *xvt);

 /* XVT debugfs */
-#ifdef CPTCFG_IWLWIFI_DEBUGFS
+#ifdef CONFIG_IWLWIFI_DEBUGFS
 int iwl_xvt_dbgfs_register(struct iwl_xvt *xvt, struct dentry *dbgfs_dir);
 #else
 static inline int iwl_xvt_dbgfs_register(struct iwl_xvt *xvt,
@@ -511,7 +511,7 @@ static inline int iwl_xvt_dbgfs_register(struct iwl_xvt *xvt,
 {
	return 0;
 }
-#endif /* CPTCFG_IWLWIFI_DEBUGFS */
+#endif /* CONFIG_IWLWIFI_DEBUGFS */

 #endif

--
2.26.2
